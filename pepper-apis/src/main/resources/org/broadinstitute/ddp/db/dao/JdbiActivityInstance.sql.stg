group JdbiActivityInstance;

select_all_instances() ::= <<
select ai.activity_instance_id,
       ai.activity_instance_guid,
       ai.study_activity_id,
       ai.participant_id,
       ai.created_at,
       ai.first_completed_at,
       ai.is_readonly,
       ai.is_hidden,
       ai.ondemand_trigger_id,
       act.study_id,
       act.allow_unauthenticated,
       act.study_activity_code,
       act_type.activity_type_code as activity_type,
       ai.section_index,
       (select aist.activity_instance_status_type_code
          from activity_instance_status as ais
          join activity_instance_status_type as aist on ais.activity_instance_status_type_id = aist.activity_instance_status_type_id
         where ais.activity_instance_id = ai.activity_instance_id
         order by ais.updated_at desc
         limit 1
       ) as activity_instance_status_type
  from activity_instance as ai
  join study_activity as act on ai.study_activity_id = act.study_activity_id
  join activity_type as act_type on act_type.activity_type_id = act.activity_type_id
>>

queryByGuid() ::= <<
<select_all_instances()>
where ai.activity_instance_guid = :activityInstanceGuid
>>

queryById() ::= <<
<select_all_instances()>
where ai.activity_instance_id = :activityInstanceId
>>

queryByUserGuidAndInstanceGuid() ::= <<
<select_all_instances()>
 join user as u on u.user_id = ai.participant_id
where ai.activity_instance_guid = :instanceGuid
  and u.guid = :userGuid
>>

queryLatestGuidByUserGuidAndCodesOfActivities(activityCodes) ::= <<
	select
		ai.activity_instance_guid
	from
		activity_instance as ai,
		study_activity as sa,
		user as u
	where
		u.guid = :userGuid
		and sa.study_id = :studyId
		and sa.study_activity_code in (<activityCodes>)
		and ai.participant_id = u.user_id
		and ai.study_activity_id = sa.study_activity_id
	order by
		ai.created_at desc
	limit 1
>>

queryAllByUserGuidAndActivityCode() ::= <<
<select_all_instances()>
  join user as participant on participant.user_id = ai.participant_id
 where participant.guid = :userGuid
   and act.study_activity_code = :activityCode
   and act.study_id = :studyId
>>

queryAllByUserIdAndStudyId() ::= <<
<select_all_instances()>
  join user as participant on participant.user_id = ai.participant_id
 where ai.participant_id = :userId
   and act.study_id = :studyId
>>
