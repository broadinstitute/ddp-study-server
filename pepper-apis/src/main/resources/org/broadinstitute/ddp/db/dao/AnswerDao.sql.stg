group AnswerDao;

/**
 * Note: we use left-join here since different answer types will join to different answer ids.
 */
deleteAllAnswerValuesByActivityInstanceIds(instanceIds) ::= <<
delete aa, ba, da, na, ta, pa, ca
  from answer as a
  left join agreement_answer as aa on aa.answer_id = a.answer_id
  left join boolean_answer as ba on ba.answer_id = a.answer_id
  left join date_answer as da on da.answer_id = a.answer_id
  left join numeric_answer as na on na.answer_id = a.answer_id
  left join text_answer as ta on ta.answer_id = a.answer_id
  left join picklist_option__answer as pa on pa.answer_id = a.answer_id
  left join composite_answer_item as ca on ca.parent_answer_id = a.answer_id
 where a.activity_instance_id in (<instanceIds>)
>>

queryAnswerIdForQuestionInLatestInstance() ::= <<
select a.answer_id
  from activity_instance as ai
  join user as u on u.user_id = ai.participant_id
  left join answer as a on a.activity_instance_id = ai.activity_instance_id
  left join question as q on q.question_id = a.question_id
  left join question_stable_code as qsc on qsc.question_stable_code_id = q.question_stable_code_id
 where u.guid = :userGuid
   and ai.study_activity_id = :activityId
   and qsc.stable_id = :questionStableId
   and ai.created_at = (
       select max(created_at)
         from activity_instance
        where participant_id = u.user_id
          and study_activity_id = ai.study_activity_id)
>>

queryAnswerIdByQuestionStableIdAndLatestInstance() ::= <<
select a.answer_id
  from answer as a
  join activity_instance as ai on ai.activity_instance_id = a.activity_instance_id
  join study_activity as act on act.study_activity_id = ai.study_activity_id
  join question as q on q.question_id = a.question_id
  join question_stable_code as qsc
       on qsc.question_stable_code_id = q.question_stable_code_id
       and qsc.umbrella_study_id = act.study_id
 where ai.participant_id = :userId
   and qsc.umbrella_study_id = :studyId
   and qsc.stable_id = :stableId
   and ai.created_at = (
       select max(created_at)
         from activity_instance
        where participant_id = ai.participant_id
          and study_activity_id = act.study_activity_id)
>>

queryAnswerIdByQuestionStableIdAndInstanceId() ::= <<
select a.answer_id
  from answer as a
  join activity_instance as ai on ai.activity_instance_id = a.activity_instance_id
  join study_activity as act on act.study_activity_id = ai.study_activity_id
  join question as q on q.question_id = a.question_id
  join question_stable_code as qsc
       on qsc.question_stable_code_id = q.question_stable_code_id
       and qsc.umbrella_study_id = act.study_id
 where ai.participant_id = :userId
   and ai.activity_instance_id = :instanceId
   and qsc.stable_id = :stableId
>>
