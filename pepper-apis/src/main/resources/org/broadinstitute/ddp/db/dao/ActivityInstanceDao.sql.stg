group ActivityInstanceDao;

select_all_base_instance_responses_with_latest_status() ::= <<
select ai.activity_instance_id   as instance_id,
       ai.activity_instance_guid as instance_guid,
       ai.participant_id,
       ai.is_readonly,
       ai.created_at,
       ai.first_completed_at,
       act.study_activity_id     as activity_id,
       act.study_activity_code   as activity_code,
       (select ver.version_tag
          from activity_version as ver
          join revision as rev on rev.revision_id = ver.revision_id
         where ver.study_activity_id = ai.study_activity_id
           and rev.start_date \<= ai.created_at
           and (rev.end_date is null or ai.created_at \< rev.end_date)
       ) as activity_version_tag,
       ais.activity_instance_status_id      as activity_instance_status_id,
       ais.activity_instance_id             as activity_instance_id,
       ais.operator_id                      as operator_id,
       ais.updated_at                       as updated_at,
       ais.activity_instance_status_type_id as activity_instance_status_type_id,
       (select activity_instance_status_type_code
          from activity_instance_status_type
         where activity_instance_status_type_id = ais.activity_instance_status_type_id
       ) as activity_instance_status_type_code
  from activity_instance as ai
  join activity_instance_status as ais on ais.activity_instance_id = ai.activity_instance_id
       and ais.updated_at = (select max(s2.updated_at) from activity_instance_status as s2 where s2.activity_instance_id = ai.activity_instance_id)
  join study_activity as act on act.study_activity_id = ai.study_activity_id
  join umbrella_study as s on s.umbrella_study_id = act.study_id
  join user as u on u.user_id = ai.participant_id
>>

queryBaseResponsesByInstanceId() ::= <<
<select_all_base_instance_responses_with_latest_status()>
where ai.activity_instance_id = :instanceId
>>

queryBaseResponsesByInstanceGuid() ::= <<
<select_all_base_instance_responses_with_latest_status()>
where ai.activity_instance_guid = :instanceGuid
>>

queryBaseResponsesByStudyAndUserGuid() ::= <<
<select_all_base_instance_responses_with_latest_status()>
where s.guid = :studyGuid
  and u.guid = :userGuid
>>

queryBaseResponsesByStudyIdAndUserIdsLimitedToActivityIds(userIds, limitActivities, activityIds) ::= <<
<select_all_base_instance_responses_with_latest_status()>
where s.umbrella_study_id = :studyId
  and u.user_id in (<userIds>)
<if(limitActivities)>
  and ai.study_activity_id in (<activityIds>)
<endif>
>>
