group KitCheckService;

/**
 * Get user and address info of all participants enrolled in given study and has not received a kit of given type yet.
 * This returns list based on batch size. Callers will need to apply more filtering criteria, such as pex expressions
 * and geographic limitations from kit configuration information to narrow the list.
 */
queryAddressInfoForEnrolledUsersWithoutKits() ::= <<
select user.user_id,
       user.guid as user_guid,
       address.address_id,
       vs.code as address_validation_status
  from user_study_enrollment as usen
  join user on user.user_id = usen.user_id
  join umbrella_study as study on study.umbrella_study_id = usen.study_id
  join enrollment_status_type as entype on entype.enrollment_status_type_id = usen.enrollment_status_type_id
  left join default_mailing_address as defadd on defadd.participant_user_id = user.user_id
  left join mailing_address as address on address.address_id = defadd.address_id
  left join mailing_address_validation_status as vs on vs.mailing_address_validation_status_id = address.validation_status_id
 where study.guid = :studyGuid
   and entype.enrollment_status_type_code = 'ENROLLED'
   and not exists (
       select 1
         from kit_request as kit
        where kit.kit_type_id = :kitTypeId
          and kit.participant_user_id = user.user_id
          and kit.study_id = study.umbrella_study_id
       )
   and valid_to is null
 order by usen.user_study_enrollment_id
 limit :limit offset :offset
>>
