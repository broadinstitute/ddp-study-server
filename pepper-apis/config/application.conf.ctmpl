# This is the main configuration file for DataDonationPlatform.java

{{with $environment := env "ENVIRONMENT"}}
{{with $version := env "VERSION"}}
{{with $app := env "APP"}}
{{with $conf := secret (printf "secret/pepper/%s/%s/conf" $environment $version)}}
{{with $dsm_conf := secret (printf "secret/pepper/%s/%s/dsm/config" $environment $version)}}
{{with $auth0 := index $conf.Data "auth0"}}
{{with $testingConf := secret (printf "secret/pepper/%s/%s/testing" $environment $version)}}
{{with $testingAuth := index $testingConf.Data "auth0"}}
{{with $slack := index $conf.Data "slack"}}
{{with $elasticsearchConf := secret (printf "secret/pepper/%s/%s/elasticsearch" $environment $version)}}
{
    "dbUrl": "{{$conf.Data.dbUrl}}",
    "housekeepingDbUrl": "{{$conf.Data.housekeepingDbUrl}}",
    "defaultTimezone": "{{$conf.Data.defaultTimezone}}",
    "maxConnections": {{$conf.Data.maxConnections}},
    "housekeepingMaxConnections": {{$conf.Data.housekeepingMaxConnections}},
    "port": {{$conf.Data.port}},
    "doLiquibase": {{$conf.Data.doLiquibase}},
    "threadTimeout": {{$conf.Data.threadTimeout}},
    "auth0": {
        "domain": "{{$auth0.domain}}",
        "managementApiSecret": "{{$auth0.managementApiSecret}}",
        "managementApiClientId": "{{$auth0.managementApiClientId}}",
        "encryptionSecret": "{{$auth0.encryptionSecret}}",
        "dsmDomain": "{{$auth0.dsmDomain}}",
        "dsmClientId": "{{$auth0.dsmClientId}}",
        "dsmClientSecret": "{{$auth0.dsmClientSecret}}",
        "ipAllowList": [
            {{range $i, $ip := $conf.Data.auth0.ipAllowList}}
                {{if $i}},{{end}}"{{ $ip }}"
            {{end}}
            ]
    },
    "auth0LogEvents" : {
	{{if $conf.Data.auth0LogEvents.token}}
		"token" : "{{$conf.Data.auth0LogEvents.token}}"
    {{end}}
	},
    "slack": {
        "hook": "{{$slack.hook}}",
        "channel": "{{$slack.channel}}",
        "queueSize": 10,
        "intervalInMillis": 60000
    },
    "socialTestEmail": "{{$testingConf.Data.socialTestEmail}}",
    "socialTestPassword": "{{$testingConf.Data.socialTestPassword}}",
    "healthcheckPassword": "{{$conf.Data.healthcheckPassword}}",
    "easyPostApiKey": "{{$conf.Data.easyPostApiKey}}",
    "usePubSubEmulator": false,
    "runScheduler": {{$conf.Data.runScheduler}},
    "restrictRegisterRoute": {{$conf.Data.restrictRegisterRoute}},
    "restrictAuth0LogEventRoute": {{$conf.Data.restrictAuth0LogEventRoute}},
    "requireDefaultGcpCredentials": {{$conf.Data.requireDefaultGcpCredentials}},
    "googleProjectId": "{{$conf.Data.googleProjectId}}",
    "fileUploads": {
        "uploadsBucket": "{{$conf.Data.fileUploads.uploadsBucket}}",
        "scannedBucket": "{{$conf.Data.fileUploads.scannedBucket}}",
        "quarantineBucket": "{{$conf.Data.fileUploads.quarantineBucket}}",
        "maxFileSizeBytes": {{$conf.Data.fileUploads.maxFileSizeBytes}},
        "maxSignedUrlMins": {{$conf.Data.fileUploads.maxSignedUrlMins}},
        "removalExpireTime": {{$conf.Data.fileUploads.removalExpireTime}},
        "removalExpireUnit": "{{$conf.Data.fileUploads.removalExpireUnit}}", // Java TimeUnit, up to MILLISECONDS granularity.
        "removalBatchSize": {{$conf.Data.fileUploads.removalBatchSize}},
        "enableScanResultHandler": {{$conf.Data.fileUploads.enableScanResultHandler}},
        "scanResultSubscription": "{{$conf.Data.fileUploads.scanResultSubscription}}",
        "signerServiceAccount": {{$conf.Data.fileUploads.signerServiceAccount | toJSONPretty}}
    },
    "fileDownload":{
        "signerServiceAccount": {{$conf.Data.fileDownload.signerServiceAccount | toJSONPretty}}
        "maxSignedUrlMins": 5,
        "defaultDownloadBucket": "{{$conf.Data.fileDownload.defaultDownloadBucket}}"
    },

    "pdfArchiveBucket": "{{$conf.Data.pdfArchiveBucket}}",
    "pdfArchiveUseFilesystem": false,
    "pubsub": {
        "enableHousekeepingTasks": {{$conf.Data.pubsub.enableHousekeepingTasks}},
        "housekeepingTasksSubscription": "{{$conf.Data.pubsub.housekeepingTasksSubscription}}",
        "pubSubTasksSubscription": "{{$conf.Data.pubsub.pubSubTasksSubscription}}",
        "pubSubTasksResultTopic": "{{$conf.Data.pubsub.pubSubTasksResultTopic}}",
        "pubSubDsmTasksTopic": "{{$conf.Data.pubsub.pubSubDsmTasksTopic}}"
        "pubSubTaskSubscriberAwaitRunningTimeout": "{{$conf.Data.pubsub.pubSubTaskSubscriberAwaitRunningTimeout}}"
    },
    "studyExportBucket": "{{$conf.Data.studyExportBucket}}",
    "schedules": {
        "checkAgeUp": "{{$conf.Data.schedules.checkAgeUp}}",
        "dbBackup": "{{$conf.Data.schedules.dbBackup}}",
        "dbBackupCheck": "{{$conf.Data.schedules.dbBackupCheck}}",
        "drugLoader": "{{$conf.Data.schedules.drugLoader}}",
        "cancerLoader": "{{$conf.Data.schedules.cancerLoader}}",
        "studyExport": "{{$conf.Data.schedules.studyExport}}",
        "fileUploadCleanup": "{{$conf.Data.schedules.fileUploadCleanup}}",
        "fileUploadNotification": "{{$conf.Data.schedules.fileUploadNotification}}",
        "tempUserCleanup": "{{$conf.Data.schedules.tempUserCleanup}}",
        "customExport": "{{$conf.Data.schedules.customExport}}"
    },
    "preferredSourceIPHeader":"X-AppEngine-User-IP",
    "nginx": {
        "apiLimitBurst": {{$conf.Data.nginx.apiLimitBurst}},
        "apiLimitRate": {{$conf.Data.nginx.apiLimitRate}}
    },
    "rateLimit": {
        "apiLimitBurst": {{$conf.Data.rateLimit.apiLimitBurst}},
        "apiLimitRate": {{$conf.Data.rateLimit.apiLimitRate}}
    },
    "sendgrid": {
    {{if $conf.Data.sendgrid.proxy}}
        "proxy": "{{$conf.Data.sendgrid.proxy}}",
    {{end}}
        "fromName": "{{$conf.Data.sendgrid.fromName}}",
        "fromEmail": "{{$conf.Data.sendgrid.fromEmail}}"
	{{if $conf.Data.sendgrid.eventsVerificationKey}}
		"eventsVerificationKey" : "{{$conf.Data.sendgrid.eventsVerificationKey}}"
    {{end}}
    },
    "sendgridToken": "{{$conf.Data.sendgridToken}}",
    {{if eq $environment "dev"}}
            "sendMetrics": false,
    {{end}}
    {{if eq $environment "test"}}
        "sendMetrics": false,
    {{end}}
    {{if eq $environment "staging"}}
        "sendMetrics": false,
    {{end}}
    {{if eq $environment "prod"}}
        "sendMetrics": true,
    {{end}}
    "googleGeocodingApiKey": "{{$conf.Data.geocodingKey}}",
    "kits": {
        # Whether to enable kits check
        "checkEnabled": {{$conf.Data.kits.checkEnabled}},
        # How many seconds to wait before doing next check
        "intervalSecs": {{$conf.Data.kits.intervalSecs}},
        # Batch size to use for checking status and scheduling
        "batchSize": {{$conf.Data.kits.batchSize}}
    },
    {{if eq $app "housekeeping"}}
    "jcacheConfigurationFile": "redisson-jcache-housekeeping.yaml",
    {{else}}
    "jcacheConfigurationFile": "redisson-jcache.yaml",
    {{end}}
    "redisServerAddress": "redis://{{$conf.Data.redis.host}}:{{$conf.Data.redis.port}}",
    "elasticsearch": {
        # Whether to enable data sync to ES
        "syncEnabled": {{$conf.Data.elasticsearch.syncEnabled}},
        # How many seconds to wait before doing the next sync
        "syncIntervalSecs": {{$conf.Data.elasticsearch.syncIntervalSecs}}
    },
    "elasticsearchUrl": "{{$elasticsearchConf.Data.endpoint}}",
{{range $acct := $elasticsearchConf.Data.accounts}}{{if eq $acct.username "pepper_backend"}}
    "elasticsearchPassword": "{{$acct.password}}",
{{end}}{{end}}
    "elasticsearchUsername": "pepper_backend",
    "elasticsearchBatchSize": 100,
{{if $elasticsearchConf.Data.proxy}}
    "elasticsearchProxy": "{{$elasticsearchConf.Data.proxy}}",
{{end}}
    "dbInstanceId": "{{$conf.Data.dbInstanceId}}",
    "dsmJwtSecret": "{{$dsm_conf.Data.portal.jwtDdpSecret}}",
    "dsmJwtSigner": "org.broadinstitute.kdux",
    "apiBaseUrl": "{{$conf.Data.apiBaseUrl}}",
    {{if eq $environment "dev"}}
        "baseTestUrl": "https://pepper-dev.datadonationplatform.org",
        "baseWebDriverUrl": "https://basil-dev.datadonationplatform.org",
        "dsmBaseUrl": "https://dsm-dev.datadonationplatform.org:443"
    {{end}}
    {{if eq $environment "test"}}
        "baseTestUrl": "https://pepper-test.datadonationplatform.org",
        "dsmBaseUrl": "https://dsm-test.datadonationplatform.org:443"
    {{end}}
    {{if eq $environment "staging"}}
        "baseTestUrl": "https://pepper-staging.datadonationplatform.org",
        "dsmBaseUrl": "https://dsm-staging.datadonationplatform.org:443"
    {{end}}
    {{if eq $environment "prod"}}
        "dsmBaseUrl": "https://dsm.datadonationplatform.org:443"
    {{end}}
}
{{end}}
{{end}}
{{end}}
{{end}}
{{end}}
{{end}}
{{end}}
{{end}}
{{end}}
{{end}}
