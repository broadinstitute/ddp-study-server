ActivityType:
  title: ActivityType
  type: string
  enum:
    - FORMS
ActivityInstanceStatusType:
  title: ActivityInstanceStatusType
  type: string
  enum:
    - COMPLETE
    - CREATED
    - IN_PROGRESS
FormType:
  title: FormType
  type: string
  enum:
    - CONSENT
    - GENERAL
    - PREQUALIFIER
InstitutionType:
  title: InstitutionType
  type: string
  enum:
    - INITIAL_BIOPSY
    - INSTITUTION
    - PHYSICIAN
JoinMailingListPayload:
  type: object
  title: JoinMailingListPayload
  required:
    - firstName
    - lastName
    - emailAddress
  properties:
    firstName:
      description: users first name
      type: string
      example: John
      minLength: 0
    lastName:
      description: users last name
      type: string
      example: Doe
      minLength: 0
    emailAddress:
      description: users email address
      type: string
      example: john.doe@example.com
    info:
      description: Strings providing context about which umbrella based mailing list the user is interested in. Usually list of diseases
      type: array
      minItems: 0
      example: ['Gauchers disease', 'Hirschsprungs disease']
      items:
        type: string
    umbrellaGuid:
      description: The umbrella id of the mailing list the user is interested in (one of umbrellaId OR studyGuid but not both is required)
      example: cmi
      type: string
    studyGuid:
      description: The studyGuid of the mailing list the user is interested in (one of umbrellaId OR studyGuid but not both is required)
      example: ANGIO
      type: string
ListStyle:
  title: ListStyle
  type: string
  default: NONE
  enum:
    - NUMBER
    - BULLET
    - UPPER_ALPHA
    - NONE
NumericType:
  title: NumericType
  type: string
  enum:
    - INTEGER
  description: describes what type of numeric value it is
Presentation:
  title: Presentation
  type: string
  default: DEFAULT
  enum:
    - DEFAULT
    - MERGE
  description: |
    a hint for presenting group blocks
    * `DEFAULT` - should use the default presentation behavior
    * `MERGE` - should present nested blocks together on the same screen or page, as if merging them
ValidationType:
  type: string
  enum:
    - COMPLETE
    - DATE_RANGE
    - AGE_RANGE
    - DAY_REQUIRED
    - LENGTH
    - MONTH_REQUIRED
    - NUM_OPTIONS_SELECTED
    - REGEX
    - REQUIRED
    - YEAR_REQUIRED
Activity:
  type: object
  required:
    - activityType
    - formType
    - activityCode
    - guid
    - title
    - subtitle
    - readonly
    - statusCode
    - listStyleHint
    - sections
    - lastUpdatedText
    - lastUpdated
    - isFollowup
    - sectionIndex
  properties:
    activityType:
      $ref: '../pepper.yml#/components/schemas/ActivityType'
    formType:
      $ref: '../pepper.yml#/components/schemas/FormType'
    activityCode:
      type: string
      description: unique identifier of the activity
    guid:
      type: string
      description: unique identifier for this instance of the activity
    statusCode:
      $ref: "../pepper.yml#/components/schemas/ActivityInstanceStatusType"
      example: IN_PROGRESS
    title:
      type: string
      description: title of the activity to be displayed
    subtitle:
      type: string
      nullable: true
      description: |
        A string to display to the user as a subtitle for the activity. If the
        `ddp-Content-Style` header is set to `BASIC`, this field will contain
        unstructured text.
    readonly:
      type: boolean
    readonlyHint:
      type: string
      nullable: true
      description: |
        A string to display when an activity is in a read-only state (the
        `readonly` flag is `true`). If the `ddp-Content-Style` header is set to
        `BASIC`, this field will contain unstructured text.
    listStyleHint:
      $ref: '../pepper.yml#/components/schemas/ListStyle'
    introduction:
      $ref: '../pepper.yml#/components/schemas/Section'
    sections:
      type: array
      items:
        $ref: '../pepper.yml#/components/schemas/Section'
    closing:
      $ref: '../pepper.yml#/components/schemas/Section'
    lastUpdatedText:
      type: string
      nullable: true
      description: |
        A human-readable string that shows when the activity definition was last
        updated. If the `ddp-Content-Style` header is set to `BASIC`, this field
        will contain unstructured text.
    lastUpdated:
      type: string
      format: date-time
      nullable: true
      description: The date time the activity definition (NOT the instance) was last updated
    isFollowup:
      type: boolean
      description: whether this activity is considered a "follow-up"
    sectionIndex:
      type: integer
      minimum: 0
      description: The section index of the activity form by the user
Activity.Summary:
  type: object
  title: Activity Summary
  required:
    - activityCode
    - activityType
    - activitySubtype
    - activityName
    - activityTitle
    - activitySubtitle
    - activityDescription
    - activitySummary
    - instanceGuid
    - statusCode
    - readonly
    - numQuestions
    - numQuestionsAnswered
    - isFollowup
  properties:
    activityCode:
      description: the source activity for this instance
      example: ABCDEFGH12
      type: string
    activityType:
      $ref: "../pepper.yml#/components/schemas/ActivityType"
    activitySubtype:
      $ref: "../pepper.yml#/components/schemas/FormType"
    activityName:
      type: string
      description: name of the activity
      example: Medical Survey
    activityTitle:
      type: string
      description: title of the activity, should be used when viewing/editing activity instance
      example: Please tell us about your disease
    activitySubtitle:
      type: string
      nullable: true
    activityDescription:
      type: string
      nullable: true
    activitySummary:
      type: string
      nullable: true
    createdAt:
      type: integer
      description: The creation timestamp of the activity instance, in milliseconds since `1970-01-01T00:00:00Z` (UNIX time)
    icon:
      description: a Base64 encoded png or jpg image
      example: YW55IGN...BwbGVhc3VyZQ==
      type: string
    instanceGuid:
      example: 6B03213FD0
      type: string
    numQuestions:
      description: number of questions in this activity
      example: 4
      type: integer
    numQuestionsAnswered:
      description: number of questions that have been answered in this activity
      example: 1
      type: integer
    readonly:
      description: false if the activity can be modified
      example: false
      type: boolean
    statusCode:
      $ref: "../pepper.yml#/components/schemas/ActivityInstanceStatusType"
      example: IN_PROGRESS
    isFollowup:
      description: true if the activity is generally considered to be an activity that comes after the "main" activities
      type: boolean
######
#
# Answers
###
Answer:
  type: object
  required:
    - answerGuid
  properties:
    answerGuid:
      type: string
Answer.String:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Answer'
    - type: object
      required:
        - value
      properties:
        value:
          type: string
          nullable: true
Answer.Date:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Answer'
    - type: object
      required:
        - value
      properties:
        value:
          $ref: '../pepper.yml#/components/schemas/DateValue'
Answer.Composite:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Answer'
    - type: object
      required:
        - value
      properties:
        value:
          type: array
          items:
            type: array
            items:
              anyOf:
                - $ref: '../pepper.yml#/components/schemas/Answer.Date'
                - $ref: '../pepper.yml#/components/schemas/Answer.Picklist'
                - $ref: '../pepper.yml#/components/schemas/Answer.String'
Answer.Boolean:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Answer'
    - type: object
      required:
        - value
      properties:
        value:
          type: boolean
Answer.Numeric:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Answer'
    - type: object
      discriminator:
        propertyName: numericType
        mapping:
          INTEGER: '../pepper.yml#/components/schemas/Answer.Numeric.Integer'
      required:
        - numericType
      properties:
        numericType:
          type: string
          enum:
            - INTEGER
Answer.Numeric.Integer:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Answer.Numeric'
    - type: object
      required:
        - value
      properties:
        numericType:
          type: string
          default: INTEGER
          enum:
            - INTEGER
        value:
          type: integer
          nullable: true
Answer.Picklist:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Answer'
    - type: object
      required:
        - value
      properties:
        value:
          type: array
          items:
            $ref: '../pepper.yml#/components/schemas/SelectedOption'
SelectedOption:
  type: object
  required:
    - stableId
    - detail
  properties:
    stableId:
      type: string
    detail:
      type: string
      nullable: true
DateValue:
  type: object
  description: an object which represents a day, month, and year in UTC.
  properties:
    day:
      type: integer
      nullable: true
      minimum: 0
    month:
      type: integer
      nullable: true
      minimum: 0
    year:
      type: integer
      nullable: true
      minimum: 0
AnswerSubmission:
  type: object
  discriminator:
    propertyName: value
  required:
    - stableId
    - value
  properties:
    stableId:
      type: string
      description: question identifier that the answer is for
    answerGuid:
      type: string
      description: the identifier for the answer to update
AnswerSubmission.Boolean:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/AnswerSubmission'
    - type: object
      required:
        - value
      properties:
        value:
          type: boolean
AnswerSubmission.Composite:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/AnswerSubmission'
    - type: object
      required:
        - value
      properties:
        value:
          type: array
          items:
            type: array
            items:
              anyOf:
                - $ref: '../pepper.yml#/components/schemas/AnswerSubmission.Date'
                - $ref: '../pepper.yml#/components/schemas/AnswerSubmission.Picklist'
                - $ref: '../pepper.yml#/components/schemas/AnswerSubmission.String'
AnswerSubmission.Date:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/AnswerSubmission'
    - type: object
      required:
        - value
      properties:
        value:
          $ref: '../pepper.yml#/components/schemas/DateValue'
AnswerSubmission.Numeric.Integer:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/AnswerSubmission'
    - type: object
      required:
        - value
      properties:
        value:
          type: integer
          nullable: true
AnswerSubmission.Picklist:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/AnswerSubmission'
    - type: object
      required:
        - value
      properties:
        value:
          type: array
          items:
            $ref: '../pepper.yml#/components/schemas/SelectedOption'
AnswerSubmission.String:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/AnswerSubmission'
    - type: object
      required:
        - value
      properties:
        value:
          type: string
#####
#
# Blocks
#
#####
Block:
  type: object
  discriminator:
    propertyName: blockType
  required:
    - blockType
    - blockGuid
    - shown
  properties:
    blockType:
      type: string
    blockGuid:
      type: string
    shown:
      type: boolean
Block.Component:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Block'
    - type: object
      required:
        - component
        - displayNumber
      properties:
        blockType:
          type: string
          default: COMPONENT
          enum:
            - COMPONENT
        component:
          $ref: '../pepper.yml#/components/schemas/Component'
        displayNumber:
          type: integer
          minimum: 1
          nullable: true
          description: the number to label this block, `null` if it shouldn't be numbered
Block.Conditional:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Block'
    - type: object
      required:
        - control
        - nested
        - displayNumber
      properties:
        blockType:
          type: string
          default: CONDITIONAL
          enum:
            - CONDITIONAL
        control:
          $ref: '../pepper.yml#/components/schemas/Question'
        nested:
          type: array
          items:
            anyOf:
              - $ref: '../pepper.yml#/components/schemas/Block.Component'
              - $ref: '../pepper.yml#/components/schemas/Block.Question'
              - $ref: '../pepper.yml#/components/schemas/Block.Content'
        displayNumber:
          type: integer
          minimum: 1
          nullable: true
          description: the number to label this block, `null` if it shouldn't be numbered
Block.Grouped:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Block'
    - type: object
      required:
        - listStyleHint
        - presentation
        - nested
        - title
      properties:
        blockType:
          type: string
          default: GROUP
          enum:
            - GROUP
        listStyleHint:
          $ref: '../pepper.yml#/components/schemas/ListStyle'
        presentation:
          $ref: '../pepper.yml#/components/schemas/Presentation'
        title:
          type: string
        nested:
          type: array
          items:
            anyOf:
              - $ref: '../pepper.yml#/components/schemas/Block.Component'
              - $ref: '../pepper.yml#/components/schemas/Block.Question'
              - $ref: '../pepper.yml#/components/schemas/Block.Content'
Block.Question:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Block'
    - type: object
      required:
        - question
        - displayNumber
      properties:
        blockType:
          type: string
          default: QUESTION
          enum:
            - QUESTION
        question:
          $ref: '../pepper.yml#/components/schemas/Question'
        displayNumber:
          type: integer
          minimum: 1
          nullable: true
          description: the number to label this block, `null` if it shouldn't be numbered
Block.Content:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Block'
    - type: object
      required:
        - body
      properties:
        blockType:
          type: string
          default: CONTENT
          enum:
            - CONTENT
        title:
          type: string
        body:
          type: string
#####
#
# Components
#
#####
Component:
  type: object
  discriminator:
    propertyName: componentType
  required:
    - componentType
  properties:
    componentType:
      type: string
      enum:
        - PHYSICIAN
        - INSTITUTION
        - MAILING_ADDRESS
    parameters:
      type: object
Component.Physician:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Component'
    - type: object
      required:
        - componentType
        - parameters
      properties:
        componentType:
          type: string
          enum:
            - PHYSICIAN
        parameters:
          type: object
          properties:
            titleText:
              type: string
            subtitleText:
              type: string
            allowMultiple:
              type: boolean
            addButtonText:
              type: string
            institutionType:
              type: string
              enum:
                - PHYSICIAN
            showFieldsInitially:
              type: boolean
            required:
              type: boolean
Component.Institution:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Component'
    - type: object
      required:
        - componentType
        - parameters
      properties:
        componentType:
          type: string
          enum:
            - INSTITUTION
        parameters:
          type: object
          properties:
            titleText:
              type: string
            subtitleText:
              type: string
            allowMultiple:
              type: boolean
            addButtonText:
              type: string
            institutionType:
              type: string
              enum:
                - INITIAL_BIOPSY
                - INSTITUTION
            showFieldsInitially:
              type: boolean
            required:
              type: boolean
Component.MailingAddress:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Component'
    - type: object
      required:
        - componentType
        - parameters
      properties:
        componentType:
          type: string
          enum:
            - MAILING_ADDRESS
        parameters:
          type: object
          properties:
            titleText:
              type: string
            subtitleText:
              type: string
ConditionalRule:
  type: object
  title: ConditionalRule
  properties:
    operator:
      type: string
      enum:
        - HAS
    value:
      type: string
      description: the
    target:
      type: string
      description: the guid of the target block to show or hide
ConsentModel:
  type: object
  title: ConsentModel
  description: 'A set of elections, and their state, for an associated participant and activity'
  required:
    - activityCode
    - instanceGuid
    - consented
    - elections
  properties:
    activityCode:
      type: string
      example: MY_STUDY_CONSENT
      description: 'The identifier of the activity template for this set of elections'
    instanceGuid:
      type: string
      example: A883837A15
      description: 'The activity instance this set of elections is associated with. This may be `null` if one has not been created yet'
    consented:
      type: boolean
      description: '`true` if the participant has completed the associated activity instance, `false` if the activity instance has been created or is in progress, and `null` if there is no associated activity instance'
    elections:
      type: array
      items:
        $ref: '../pepper.yml#/components/schemas/ElectionModel'
ElectionModel:
  type: object
  title: Election
  required:
    - stableId
    - selected
  properties:
    stableId:
      type: string
      description: identifier for the specified election
      example: 'BLOOD_SAMPLE'
    selected:
      type: boolean
      description: '`true` if the participant has consented to this election, `false` if they have not, and `null` if the participant has not yet responded'
      example: false
Error.Activity:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Error'
    - type: object
      properties:
        code:
          type: string
          enum:
            - MALFORMED_ACCEPT_LANGUAGE_HEADER
Error.ActivityCreate:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Error'
    - type: object
      properties:
        code:
          type: string
          enum:
            - TOO_MANY_INSTANCES
            - UNSATISFIED_PRECONDITION
Error.ActivityNotFound:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Error'
    - type: object
      properties:
        code:
          type: string
          enum:
            - ACTIVITY_NOT_FOUND
ValidationFailure:
  type: object
  required:
    - message
  properties:
    stableIds:
      description: |
        ids of questions associated with the validation failure. If not specified, interpreted mean scope of failure is the full activity
        instance
      type: array
      items:
        type: string
    message:
      type: string
Error.Consent:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Error'
    - type: object
      properties:
        code:
          type: string
          enum:
            - ACTIVITY_NOT_FOUND
Error.ProfileGet:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Error'
    - type: object
      properties:
        code:
          type: string
          enum:
            - MISSING_PROFILE
Error.ProfileUpdate:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Error'
    - type: object
      properties:
        code:
          type: string
          enum:
            - BAD_PAYLOAD
            - MISSING_BODY
            - MISSING_PROFILE
            - INVALID_LANGUAGE_PREFERENCE
            - INVALID_SEX
            - INVALID_DATE
Error.ProfileAdd:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Error'
    - type: object
      properties:
        code:
          type: string
          enum:
            - BAD_PAYLOAD
            - DUPLICATE_PROFILE
            - INVALID_LANGUAGE_PREFERENCE
            - INVALID_SEX
            - INVALID_DATE
Error.ProviderNotFound:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Error'
    - type: object
      properties:
        code:
          type: string
          enum:
            - NOT_FOUND
Error.StudyNotFound:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Error'
    - type: object
      properties:
        code:
          type: string
          enum:
            - STUDY_NOT_FOUND
Error.UmbrellaNotFound:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Error'
    - type: object
      properties:
        code:
          type: string
          enum:
            - UMBRELLA_NOT_FOUND
Error:
  type: object
  required:
    - code
    - message
  properties:
    code:
      type: string
    message:
      type: string
Error.ActivityAnswersPatchBadPayload:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Error'
    - type: object
      properties:
        code:
          type: string
          enum:
            - BAD_PAYLOAD
            - INVALID_REQUEST
            - NO_SUCH_ELEMENT
            - REQUIRED_PARAMETER_MISSING
            - UNEXPECTED_NUMBER_OF_ELEMENTS
Error.ActivityAnswersInternalServerError:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Error'
    - type: object
      properties:
        code:
          type: string
          enum:
            # Indicates than the question has multiple answers
            - SERVER_ERROR
Error.ActivityAnswersPatchInvalid:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Error'
    - type: object
      properties:
        code:
          type: string
          enum:
            - ACTIVITY_INSTANCE_IS_READONLY
            - ANSWER_VALIDATION
            - MALFORMED_EMAIL
            - OPERATION_NOT_ALLOWED
        violations:
          type: array
          description: list of question validation types an answer has failed to satisfy
          items:
            type: object
            required:
              - stableId
              - rules
            properties:
              stableId:
                type: string
                description: identifier of question
              rules:
                type: array
                items:
                  $ref: '../pepper.yml#/components/schemas/ValidationType'
Error.ActivityAnswersPatchNotFound:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Error'
    - type: object
      properties:
        code:
          type: string
          enum:
            - ACTIVITY_NOT_FOUND
            - ANSWER_NOT_FOUND
            - QUESTION_NOT_FOUND
            - STUDY_NOT_FOUND
            - USER_NOT_FOUND
Error.ActivityAnswersPutInvalid:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Error'
    - type: object
      properties:
        code:
          type: string
          enum:
            - ACTIVITY_INSTANCE_IS_READONLY
            - ACTIVITY_VALIDATION
            - QUESTION_REQUIREMENTS_NOT_MET
Error.ActivityAnswersPutNotFound:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Error'
    - type: object
      properties:
        code:
          type: string
          enum:
            - ACTIVITY_NOT_FOUND
            - STUDY_NOT_FOUND
            - USER_NOT_FOUND
Error.ActivityDetailNotFound:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Error'
    - type: object
      properties:
        code:
          type: string
          enum:
            - ACTIVITY_NOT_FOUND
            - STUDY_NOT_FOUND
            - USER_NOT_FOUND
Error.BadPayload:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Error'
    - type: object
      properties:
        code:
          type: string
          enum:
            - BAD_PAYLOAD
Error.NotFound:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Error'
    - type: object
      properties:
        code:
          type: string
          enum:
            - NOT_FOUND
Error.RegisterNotFound:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Error'
    - type: object
      properties:
        code:
          type: string
          enum:
            - STUDY_NOT_FOUND
            - USER_NOT_FOUND
Error.RegisterNotValid:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Error'
    - type: object
      properties:
        code:
          type: string
          enum:
            - EXPIRED
            - NOT_SUPPORTED
Error.StudyExit:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Error'
    - type: object
      properties:
        code:
          type: string
          enum:
            - OPERATION_NOT_ALLOWED
            - NOT_SUPPORTED
Image:
  type: object
  required:
    - height
    - width
    - 1x
  properties:
    height:
      type: integer
      minimum: 0
    width:
      type: integer
      minimum: 0
    1x:
      type: string
Participant:
  type: object
  required:
    - alias
    - userGuid
  properties:
    alias:
      type: string
      example: Alice
    userGuid:
      type: string
      example: Y9JJVE1MLN8AIZL8DO7D
PicklistOption:
  type: object
  required:
    - stableId
    - allowDetails
    - optionLabel
    - exclusive
    - groupId
  properties:
    stableId:
      type: string
    groupId:
      type: string
      nullable: true
    allowDetails:
      type: boolean
    optionLabel:
      type: string
    tooltip:
      type: string
      description: tooltip for the option, in plain text
    detailLabel:
      type: string
    exclusive:
      type: boolean
PrequalifierModel:
  type: object
  required:
    - guid
    - title
    - status
    - typeName
    - isoLanguageCode
  properties:
    guid:
      type: string
      example: 6B03213FD0
    title:
      type: string
      example: Join the Basil Research Study
    status:
      type: string
      example: Started
    typeName:
      type: string
      example: Forms
    isoLanguageCode:
      type: string
      example: en
ProfileModel:
  type: object
  properties:
      birthYear:
        type: integer
        example: 1970
        deprecated: true
      birthMonth:
        type: integer
        example: 1
        deprecated: true
      birthDayInMonth:
        type: integer
        example: 1
        deprecated: true
      birthDate:
        type: string
        format: date
        example: 1999-09-19
      sex:
        type: string
        enum:
          - 'MALE'
          - 'FEMALE'
          - 'INTERSEX'
          - 'PREFER_NOT_TO_ANSWER'
        default: PREFER_NOT_TO_ANSWER
      preferredLanguage:
        type: string
        example: en
      firstName:
        type: string
        example: Foo
      lastName:
        type: string
        example: Barium

#####
#
# Questions
#
#####
Question:
  type: object
  discriminator:
    propertyName: questionType
  required:
  - questionType
  - stableId
  - prompt
  - textPrompt
  properties:
    questionType:
      type: string
    stableId:
      type: string
    prompt:
      type: string
      description: 'the text that should be displayed for the question. This field should be treated as an HTML fragment.'
      example: 'What <b>color</b> is the sky?'
    textPrompt:
      type: string
      description: 'the text that should be displayed for the question with all embedded HTML tags flattened and stripped.'
      example: 'What color is the sky?'
    tooltip:
      type: string
      description: tooltip for the question, in plain text
    additionalInfoHeader:
      type: string
      description: a plain text string for additional information to be presented before the user responds to a question
      example: Select all that apply
    additionalInfoFooter:
      type: string
      description: a plain text string for additional information to be presented after the user reads or responds to a question
      example: If you had radiation for other cancers, we will ask you about that later
    validations:
      type: array
      items:
        $ref: '../pepper.yml#/components/schemas/Validation'
    postConditionals:
      type: array
      items:
        $ref: '../pepper.yml#/components/schemas/ConditionalRule'
    validationFailures:
      type: array
      items:
        $ref: '../pepper.yml#/components/schemas/ValidationFailure'
Question.Agreement:
  allOf:
  - $ref: '../pepper.yml#/components/schemas/Question'
  - type: object
    required:
      - answers
    properties:
      questionType:
        type: string
        default: AGREEMENT
        enum:
          - AGREEMENT
      answers:
        type: array
        items:
          $ref: '../pepper.yml#/components/schemas/Answer.Boolean'
Question.Boolean:
  allOf:
  - $ref: '../pepper.yml#/components/schemas/Question'
  - type: object
    required:
      - answers
      - trueContent
      - falseContent
    properties:
      questionType:
        type: string
        default: BOOLEAN
        enum:
          - BOOLEAN
      trueContent:
        type: string
        example: 'Yes'
      falseContent:
        type: string
        example: 'NO'
      answers:
        type: array
        items:
          $ref: '../pepper.yml#/components/schemas/Answer.Boolean'
Question.Composite:
  allOf:
  - $ref: '../pepper.yml#/components/schemas/Question'
  - type: object
    required:
      - allowMultiple
      - addButtonText
      - additionalItemText
      - answers
      - children
      - childOrientation
    properties:
      questionType:
        type: string
        default: COMPOSITE
        enum:
          - COMPOSITE
      allowMultiple:
        type: boolean
        default: false
        description: 'true if the question should allow the addition of multiple entries'
      addButtonText:
        type: string
        description: 'The label to show for the button to add a subsequent entry. This can be ignored if `allowMultiple` is `false`'
      additionalItemText:
        type: string
        description: 'The label to show above entries beyond the initial one'
      children:
        type: array
        description: 'The child questions to present'
        items:
          anyOf:
            - $ref: '../pepper.yml#/components/schemas/Question.Date'
            - $ref: '../pepper.yml#/components/schemas/Question.Picklist'
            - $ref: '../pepper.yml#/components/schemas/Question.Text'
      childOrientation:
        type: string
        nullable: true
        enum:
          - HORIZONTAL
          - VERTICAL
        description: optional indicator of how to layout child questions
      answers:
        type: array
        items:
          $ref: '../pepper.yml#/components/schemas/Answer.Composite'
Question.Date:
  allOf:
  - $ref: '../pepper.yml#/components/schemas/Question'
  - type: object
    required:
      - answers
      - displayCalendar
      - fields
      - renderMode
      - useMonthNames
    properties:
      questionType:
        type: string
        default: DATE
        enum:
          - DATE
      placeholderText:
        type: string
        description: if present, this text string can be used as a placeholder hint
      renderMode:
        type: string
      displayCalendar:
        type: boolean
      useMonthNames:
        type: boolean
      fields:
        type: array
        items:
          type: string
          enum:
            - DAY
            - MONTH
            - YEAR
      firstSelectedYear:
        type: integer
      startYear:
        type: integer
      endYear:
        type: integer
      answers:
        type: array
        items:
          $ref: '../pepper.yml#/components/schemas/Answer.Date'
Question.Numeric:
  allOf:
  - $ref: '../pepper.yml#/components/schemas/Question'
  - type: object
    required:
      - answers
      - numericType
    properties:
      questionType:
        type: string
        default: NUMERIC
        enum:
          - NUMERIC
      placeholderText:
        type: string
        description: if present, this text string can be used as a placeholder hint
      numericType:
        $ref: '../pepper.yml#/components/schemas/NumericType'
      answers:
        type: array
        items:
          $ref: '../pepper.yml#/components/schemas/Answer.Numeric.Integer'
Question.Picklist:
  allOf:
  - $ref: '../pepper.yml#/components/schemas/Question'
  - type: object
    required:
      - selectMode
      - renderMode
      - picklistOptions
      - answers
    properties:
      questionType:
        type: string
        default: PICKLIST
        enum:
          - PICKLIST
      selectMode:
        type: string
        enum:
          - MULTIPLE
          - SINGLE
      renderMode:
        type: string
        enum:
          - LIST
          - DROPDOWN
          - CHECKBOX_LIST
      groups:
        type: array
        description: A list of groups used in the `picklistOptions` values. If there are no options which explicity request grouping, this will be an empty array.
        minItems: 0
        items:
          type: object
          required:
            - identifier
            - name
          properties:
            identifier:
              type: string
            name:
              type: string
      picklistLabel:
        type: string
      picklistOptions:
        type: array
        items:
          $ref: '../pepper.yml#/components/schemas/PicklistOption'
      answers:
        type: array
        items:
          $ref: '../pepper.yml#/components/schemas/Answer.Picklist'
Question.Text:
  allOf:
  - $ref: '../pepper.yml#/components/schemas/Question'
  - type: object
    required:
      - answers
      - inputType
    properties:
      questionType:
        type: string
        default: TEXT
        enum:
          - TEXT
      placeholderText:
        type: string
        nullable: true
      inputType:
        type: string
        enum:
          - TEXT
          - ESSAY
          - SIGNATURE
          - EMAIL
      confirmEntry:
        type: boolean
      confirmPrompt:
        type: string
        nullable: true
      mismatchMessage:
        type: string
        nullable: true
      suggestionType:
        type: string
        default: NONE
        enum:
          - NONE
          - DRUG
          - INCLUDED
          - CANCER
      suggestions:
        description: 'If the suggestionType is INCLUDED, then this is the list of suggestions to use'
        type: array
        items:
          type: string
      answers:
        type: array
        items:
          $ref: '../pepper.yml#/components/schemas/Answer.String'
Section:
  type: object
  required:
    - blocks
  properties:
    name:
      type: string
    icon:
      $ref: '../pepper.yml#/components/schemas/Image'
    blocks:
      type: array
      items:
        $ref: '../pepper.yml#/components/schemas/Block'
Study.Summary:
  type: object
  required:
    - studyGuid
    - name
    - participantCount
  properties:
    studyGuid:
      type: string
    name:
      type: string
    participantCount:
      type: integer
      minimum: 0
    registeredCount:
      type: integer
      minimum: 0
    restricted:
      type: boolean
    studyEmail:
        type: string
Study.Detail:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Study.Summary'
    - type: object
      properties:
        summary:
          type: string
#####
#
# Question Validation Types
#
##
Validation:
  type: object
  discriminator:
    propertyName: rule
  required:
    - rule
    - message
  properties:
    rule:
      $ref: '../pepper.yml#/components/schemas/ValidationType'
    message:
      type: string
    allowSave:
      description: Indicates whether the validation rule failing should allow saving corresponding data; if rule evaluates to false and allowSave value is true, client should send data to server anyways. Note data will be eventually validated, just not during initial PATCH.
      type: boolean
      default: false
Validation.Required:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Validation'
    - type: object
      properties:
        rule:
          type: string
          default: REQUIRED
          enum:
            - REQUIRED
Validation.Complete:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Validation'
    - type: object
      properties:
        rule:
          type: string
          default: COMPLETE
          enum:
            - COMPLETE
Validation.Length:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Validation'
    - type: object
      deprecated: true
      required:
        - minLength
        - maxLength
      properties:
        rule:
          type: string
          default: LENGTH
          enum:
            - LENGTH
        minLength:
          type: integer
          minimum: 0
        maxLength:
          type: integer
          minimum: 0
Validation.RegularExpression:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Validation'
    - type: object
      deprecated: true
      required:
        - regexPattern
      properties:
        rule:
          type: string
          default: REGEX
          enum:
            - REGEX
        regexPattern:
          type: string
Validation.OptionsSelected:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Validation'
    - type: object
      deprecated: true
      properties:
        rule:
          type: string
          default: NUM_OPTIONS_SELECTED
          enum:
            - NUM_OPTIONS_SELECTED
        minSelections:
          type: integer
          minimum: 0
        maxSelections:
          type: integer
          minimum: 0
Validation.DayRequired:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Validation'
    - type: object
      deprecated: true
      properties:
        rule:
          type: string
          default: DAY_REQUIRED
          enum:
            - DAY_REQUIRED
Validation.MonthRequired:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Validation'
    - type: object
      deprecated: true
      properties:
        rule:
          type: string
          default: MONTH_REQUIRED
          enum:
            - MONTH_REQUIRED
Validation.YearRequired:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Validation'
    - type: object
      deprecated: true
      properties:
        rule:
          type: string
          default: YEAR_REQUIRED
          enum:
            - YEAR_REQUIRED
Validation.DateRange:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Validation'
    - type: object
      required:
        - startDate
        - endDate
      properties:
        rule:
          type: string
          default: DATE_RANGE
          enum:
            - DATE_RANGE
        startDate:
          type: string
          description: the minimum date required to be considered valid. This value is inclusive. The date format is a full, extended ISO-8601 Calendar date in the format `YYYY-MM-DD` in the UTC time zone.
          nullable: true
        endDate:
          type: string
          description: the maximum date required to be considered valid. This value is inclusive. The date format is a full, extended ISO-8601 Calendar date in the format `YYYY-MM-DD` in the UTC time zone.
          nullable: true
Validation.AgeRange:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Validation'
    - type: object
      properties:
        rule:
          type: string
          default: AGE_RANGE
          enum:
            - AGE_RANGE
        minAge:
          type: integer
          description: after calculating the number of years since the value of the associated date, minAge defines the minimum acceptable age inclusive.
          nullable: true
        maxAge:
          type: integer
          description: after calculating the number of years since the value of the associated date, maxAge defines the maximum acceptable age inclusive.
          nullable: true
Validation.IntRange:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/Validation'
    - type: object
      properties:
        rule:
          type: string
          default: INT_RANGE
          enum:
            - INT_RANGE
        min:
          type: integer
          nullable: true
          description: the minimum acceptable number, inclusive
        max:
          type: integer
          nullable: true
          description: the maximum acceptable number, inclusive
AnnouncementModel:
  type: object
  required:
    - guid
    - permanent
    - message
  properties:
    guid:
      type: string
      format: uuid
      description: an identifier for this message
      example: c8716864-3cd8-4a4b-8736-d2eec9756ad9
    permanent:
      type: boolean
      description: if true, then message is permanent and should not be able to be dismissed by user
    message:
      type: string
Drug:
  type: object
  required:
    - name
    - description
  properties:
    name:
      type: string
      example: ABARELIX (PLENAXIS)
    description:
      type: string
      nullable: true
Suggestion.Drug:
  required:
    - drug
    - matches
  type: object
  properties:
    drug:
      $ref: '../pepper.yml#/components/schemas/Drug'
    matches:
      type: array
      description: Contains a list of substring matches for the given `Drug`. The substrings are based within the drug's `name` property.
      minItems: 0
      items:
        $ref: '../pepper.yml#/components/schemas/Suggestion.Match'
Cancer:
  type: object
  required:
    - name
    - description
  properties:
    name:
      type: string
      description: a short name for the cancer
      example: Sarcoma
    description:
      type: string
      description: a longer name for the cancer
      nullable: true
Suggestion.Cancer:
  required:
    - cancer
    - matches
  type: object
  properties:
    cancer:
      $ref: '../pepper.yml#/components/schemas/Cancer'
    matches:
      type: array
      description: Contains a list of substring matches for the given `Cancer` name. The substrings are based within the cancer `name` property.
      minItems: 0
      items:
        $ref: '../pepper.yml#/components/schemas/Suggestion.Match'
Suggestion.Institution:
  type: object
  required:
    - name
    - city
    - state
  properties:
    name:
      type: string
      example: Brigham And Women's Hospital
    city:
      type: string
      example: Boston
    state:
      type: string
      example: Massachusetts
Suggestion.Match:
  type: object
  required:
    - offset
    - length
  properties:
    offset:
      type: integer
      minimum: 0
    length:
      type: integer
      minimum: 0

BaseMailAddress:
  type: object
  properties:
    name:
      type: string
      description: the participant's full name
    street1:
      type: string
      description: the participant's delivery address
    street2:
      type: string
      description: the participant's delivery address
    city:
      type: string
    state:
      type: string
    country:
      type: string
    zip:
      type: string
    phone:
      type: string
MailingAddress:
  allOf:
    - $ref: '../pepper.yml#/components/schemas/BaseMailAddress'
    - type: object
      description: a participant's mailing address, to be used for delivery.
      required:
        - description
        - name
        - street1
        - city
        - state
        - country
        - zip
        - phone
      properties:
        guid:
          type: string
          description: the server-generated unique identifier for the mailing address
        description:
          type: string
          description: the user-entered description for this address
        plusCode:
          type: string
          description: the server-generated PlusCode for the participant's location
        isDefault:
          type: boolean
          description: is this the participant's default address?
        validationStatus:
          type: integer
          description: >
            ### Address Validation States
              * **0** - *INVALID_ADDRESS*
                * The address failed to be validated by EasyPost, and there were no suggestions made. This address may not be able to be used as a delivery address.
              * **1** - *SUGGESTED_ADDRESS*
                * The address contains changes from EasyPost to improve deliverability.
              * **2** - *VALID_ADDRESS*
                * The originally entered address was successfully validated by EasyPost.
          enum:
            - 0
            - 1
            - 2
AddressWarning:
  type: object
  required:
    - code
    - message
  properties:
    code:
      type: string
      description: machine readable description of the problem
      enum:
        - W.ZIP.UNSUPPORTED
    message:
      type: string
      description: human readable description of the problem
      example: Zip code is not supported
AddressVerifyError:
  type: object
  description: error from verifying address with EasyPost
  required:
    - code
    - message
    - errors
  properties:
    code:
      type: string
      description: machine readable description of the problem
      example: ADDRESS.VERIFY.FAILURE
    message:
      type: string
      description: human readable description of the problem
      example: Unable to verify address.
    errors:
      type: array
      description: errors for specific fields of the address
      items:
        $ref: '../pepper.yml#/components/schemas/AddressFieldError'
AddressFieldError:
  type: object
  required:
    - code
    - message
    - field
  properties:
    code:
      type: string
      description: machine readable description of field error
      example: E.HOUSE_NUMBER.MISSING
    message:
      type: string
      description: human readable description of field error
      example: House number is missing
    field:
      type: string
      description: the address field, where `address` means the general address instead of a single field
      example: street1

#####
#
# Invitations
#
#####
Invitation:
  type: object
  required:
    - invitationType
    - invitationId
    - createdAt
    - voidedAt
    - verifiedAt
    - acceptedAt
  properties:
    invitationType:
      description: the type of invitation
      type: string
      enum:
        - AGE_UP
        - RECRUITMENT
      example: RECRUITMENT
    invitationId:
      description: the id of the invitation
      type: string
    createdAt:
      description: timestamp of when invitation was created, in ISO-8601 UTC format
      type: string
      example: 2020-05-13T17:58:33.887Z
    voidedAt:
      description: timestamp of when invitation was voided, making the invitation invalid, in ISO-8601 UTC format
      type: string
      nullable: true
      example: null
    verifiedAt:
      description: timestamp of when invitation was verified, indicating user has acknowledged receiving the invitation, in ISO-8601 UTC format
      type: string
      nullable: true
      example: 2020-05-13T18:58:33.887Z
    acceptedAt:
      description: timestamp of when invitation was accepted, in ISO-8601 UTC format
      type: string
      nullable: true
      example: 2020-05-13T19:58:33.887Z

MedicalProvider:
  type: object
  required:
    - medicalProviderGuid
  properties:
    medicalProviderGuid:
      type: string
      readOnly: true
    institutionName:
      type: string
    physicianName:
      type: string
    city:
      type: string
    state:
      type: string
### Participant status
ParticipantStatus:
  type: object
  required:
    - samples
  properties:
    mrRequested:
      type: integer
    mrReceived:
      type: integer
    tissueRequested:
      type: integer
    tissueSent:
      type: integer
    tissueReceived:
      type: integer
    samples:
      type: array
      description: Contains a list samples records for the participant
      minItems: 0
      items:
        $ref: '../pepper.yml#/components/schemas/ParticipantStatus.Sample'
ParticipantStatus.Sample:
  type: object
  required:
    - sent
  properties:
    kitType:
      type: string
    sent:
      type: integer
    trackingId:
      type: string
    carrier:
      type: string
    received:
      type: integer
ParticipantStatusTrackingInfo:
  type: object
  required:
    - medicalRecord
    - tissueRecord
    - kits
  properties:
    medicalRecord:
      $ref: '../pepper.yml#/components/schemas/ParticipantStatusTrackingInfo.Record'
    tissueRecord:
      $ref: '../pepper.yml#/components/schemas/ParticipantStatusTrackingInfo.Record'
    kits:
      type: array
      description: Contains a list of kits sent to the participant
      minItems: 0
      items:
        $ref: '../pepper.yml#/components/schemas/ParticipantStatusTrackingInfo.Kit'
ParticipantStatusTrackingInfo.Record:
  type: object
  required:
    - status
  properties:
    status:
      type: string
      enum:
        - INELIGIBLE
        - PENDING
        - SENT
        - RECEIVED
        - UNKNOWN
    requestedAt:
      type: integer
    receivedBackAt:
      type: integer
ParticipantStatusTrackingInfo.Kit:
  type: object
  required:
    - sentAt
  properties:
    kitType:
      type: string
    status:
      type: string
      enum:
        - INELIGIBLE
        - PENDING
        - SENT
        - RECEIVED
        - UNKNOWN
    sentAt:
      type: integer
    receivedBackAt:
      type: integer
    trackingId:
      type: string
    shipper:
      type: string

StudyPasswordPolicy:
  type: object
  required:
    - minimumLength
    - minimumCharacterClasses
    - characterClasses
    - maximumRepeatedCharacters
  properties:
    minimumLength:
      type: integer
      minimum: 1
      maximum: 128
      example: 8
      description: Minimum number of characters in password
    minimumCharacterClasses:
      type: integer
      minimum: 0
      example: 3
      description: Must have a character from at least this number of character classes
    characterClasses:
      type: array
      items:
        type: string
        enum:
          - UPPER
          - LOWER
          - NUMBER
          - SPECIAL
      minItems: 0
      example: [UPPER, LOWER, NUMBER]
      description: Set of character classes to look for in password
    maximumRepeatedCharacters:
      type: integer
      nullable: true
      example: 2
      description: If non-null, no more than the specified number of identical characters are allowed consecutively. This value is inclusive (e.g. if the value is 2, then `aa` is allowed while `aaa` is not allowed).

#####
#
# Workflows
#
#####
WorkflowNextSuggestion:
  type: object
  discriminator:
    propertyName: next
  required:
    - next
  properties:
    next:
      type: string
      description: |
        * `ACTIVITY` - Should show an activity next.
        * `DASHBOARD` - Indicates end of workflow and should direct to a dashboard if available.
        * `MAILING_LIST` - Indicates end of workflow and should prompt user to join the study mailing list.
        * `THANK_YOU` - Indicates end of workflow and a thank you message should be shown.
        * `UNKNOWN` - No suggestions available.
      enum:
        - ACTIVITY
        - DASHBOARD
        - MAILING_LIST
        - THANK_YOU
        - UNKNOWN
WorkflowNextSuggestion.Activity:
  allOf:
  - $ref: '../pepper.yml#/components/schemas/WorkflowNextSuggestion'
  - type: object
    required:
      - activityCode
      - instanceGuid
      - allowUnauthenticated
    properties:
      activityCode:
        type: string
        description: the identifier of the next activity
      instanceGuid:
        type: string
        description: the identifier of the next activity instance for user
      allowUnauthenticated:
        type: boolean
        description: Whether the next activity allows access to temporary users. If `false`, user will need to authenticate in order to access activity.
WorkflowNextSuggestion.Static:
  allOf:
  - $ref: '../pepper.yml#/components/schemas/WorkflowNextSuggestion'
  - type: object
    properties:
      next:
        type: string
        enum:
          - DASHBOARD
          - THANK_YOU
          - UNKNOWN
