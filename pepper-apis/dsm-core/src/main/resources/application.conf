email {
  notifications: """
        [{"reason": "PARTICIPANT_ASSIGNED", "sendGridTemplate": "c163e30a-8e5d-4fd0-b239-798554015575", "url": ""},
        {"reason": "GP_NOTIFICATION", "sendGridTemplate": "3ba8c85f-6448-4cbc-8c2b-49d20003e995", "url": ""},
        {"reason": "DSM_ABSTRACTION_EXPERT_QUESTION", "sendGridTemplate": "abeb7ed6-5a1f-4222-8516-3352cc0fb155", "url": ""},
        {"reason": "GP_EXPRESS_NOTIFICATION", "sendGridTemplate": "78da396d-e70e-4850-8bd9-bf9194fd6c38", "url": ""},
        {"reason": "EXITED_KIT_RECEIVED_NOTIFICATION", "sendGridTemplate": "14cd7b4d-9154-4c49-8e91-eb77ba8a5074", "url": ""},
        {"reason": "UNIVERSAL_NOTIFICATION_TEMPLATE", "sendGridTemplate": "d7e96a2d-c4d2-4bf0-8fdc-d666560248ec", "url": ""}]
    """
}

portal {
    maxConnections: 100,

    kit_query:"""
        select
        realm.instance_name,
        realm.base_url,
        request.bsp_collaborator_sample_id,
        request.bsp_collaborator_participant_id,
        realm.bsp_group,
        realm.bsp_collection,
        realm.bsp_organism,
        realm.notification_recipients,
        request.ddp_participant_id,
        kt.kit_type_name,
        kt.bsp_material_type,
        kt.bsp_receptacle_type,
        (select count(role.name)
            from ddp_instance realm2,
            ddp_instance_role inRol,
            instance_role role
            where realm2.ddp_instance_id = inRol.ddp_instance_id
            and inRol.instance_role_id = role.instance_role_id
            and role.name = ?
            and realm2.ddp_instance_id = realm.ddp_instance_id) as 'has_role',
        ex.ddp_participant_exit_id,
        kit.deactivated_date
        from
		ddp_kit_request request
		left join ddp_instance realm on request.ddp_instance_id = realm.ddp_instance_id
		left join ddp_kit kit on request.dsm_kit_request_id = kit.dsm_kit_request_id
		left join kit_type kt on request.kit_type_id = kt.kit_type_id
		left join ddp_participant_exit ex on (request.ddp_participant_id = ex.ddp_participant_id and
			request.ddp_instance_id = ex.ddp_instance_id)
        where
		kit.kit_label = ?
    """

    participantKit:"""
        select *
        from ddp_kit_request req
        left join ddp_kit kit on (req.dsm_kit_request_id = kit.dsm_kit_request_id)
        left join ddp_instance realm on (realm.ddp_instance_id = req.ddp_instance_id)
        left join kit_type ty on (req.kit_type_id = ty.kit_type_id)
        where req.ddp_participant_id = ?
        and realm.instance_name = ?
    """

    exitedKitAction:"""
        update
        ddp_kit_discard
        set
        action = ?
        where kit_discard_id = ?
    """

    exitedKitDiscarded:"""
        update
        ddp_kit_discard
        set
        discard_by = ?,
        discard_date = ?,
        action = ?
        where kit_discard_id = ?
    """

    insertKitDiscard:"""
        insert into
        ddp_kit_discard
        set
        action = ?,
        dsm_kit_request_id = ?
    """

    updateKitDiscard:"""
        update
        ddp_kit_discard
        set
        %file = ?,
        changed_by = ?,
        action = case
            when path_bsp_screenshot is not null && path_sample_image is not null
            then 'toReview'
            else 'discard'
            end
        where kit_discard_id = ?
    """

    userConfirmed:"""
        update
        ddp_kit_discard
        set
        user_confirm = ?,
        action = ?
        where
        kit_discard_id = ?
        and changed_by != ?
    """

    insertKitRequest:"""
            insert into
            ddp_kit_request
            (ddp_instance_id,
            ddp_kit_request_id,
            kit_type_id,
            ddp_participant_id,
            bsp_collaborator_participant_id,
            bsp_collaborator_sample_id,
            ddp_label,
            created_by,
            created_date,
            external_order_number,
            upload_reason)
            values (?,?,?,?,?,?,?,?,?,?,?)
        """

    insertKit:"""
        insert into
        ddp_kit
        (dsm_kit_request_id,
        label_url_to,
        label_url_return,
        easypost_to_id,
        easypost_return_id,
        tracking_to_id,
        tracking_return_id,
        easypost_tracking_to_url,
        easypost_tracking_return_url,
        error,
        message,
        easypost_address_id_to)
        values (?,?,?,?,?,?,?,?,?,?,?,?)
    """

    updateKitRequest:"""
        update
        ddp_kit
        set
        kit_complete = 1,
        scan_date = ?,
        scan_by = ?,
        kit_label = ?
        where
        dsm_kit_request_id = (
            select
            dsm_kit_request_id
            from
            ddp_kit_request
            where
            ddp_label = ?)
        and not kit_complete <=> 1
		and deactivated_date is null
    """

    insertKitTrackingRequest:"""
        insert into
        ddp_kit_tracking
        set
        scan_date = ?,
        scan_by = ?,
        tracking_id = ?,
        kit_label = ?
    """

    checkDdpLabelIdQuery:"""
        select 1 as found
        from
        (select 1 from
            ddp_kit_request req
            where req.ddp_label = ?) as existing_rows
    """

    checkKitTypeNeedsTrackingQuery:"""
        select kt.requires_insert_in_kit_tracking as found
        from ddp_kit_request request
        left join kit_type kt on (kt.kit_type_id = request.kit_type_id)
        where ddp_label = ?
    """

    checkTrackingQuery:"""
        select 1 as found
        from
        (select 1 from
            ddp_kit_tracking tracking
            where tracking.kit_label = ?) as existing_rows
    """

    unsentKitRequestsPerRealmQuery:"""
        select
        inst.ddp_instance_id,
        inst.instance_name,
        kType.kit_type_name,
        kType.required_role,
        (select count(realm.instance_name) as kitRequestCount
            from
            ddp_kit_request request
            left join ddp_instance realm on request.ddp_instance_id = realm.ddp_instance_id
            left join ddp_kit kit on request.dsm_kit_request_id = kit.dsm_kit_request_id
            left join kit_type kt on request.kit_type_id = kt.kit_type_id
            left join ddp_participant_exit ex on (request.ddp_participant_id = ex.ddp_participant_id and
				request.ddp_instance_id = ex.ddp_instance_id)
            where
            realm.instance_name = inst.instance_name
            and request.kit_type_id = kType.kit_type_id
            and ex.ddp_participant_exit_id is null
            and not (kit.kit_complete <=> 1)
            and not (kit.error <=> 1)
            and kit.label_url_to is null
            and kit.label_date is null
            and kit.deactivated_date is null) as kitRequestCountNoLabel,
        (select min(request.created_date) as kitRequestCount
            from
            ddp_kit_request request
            left join ddp_instance realm on request.ddp_instance_id = realm.ddp_instance_id
            left join ddp_kit kit on request.dsm_kit_request_id = kit.dsm_kit_request_id
            left join kit_type kt on request.kit_type_id = kt.kit_type_id
            left join ddp_participant_exit ex on (request.ddp_participant_id = ex.ddp_participant_id and
				request.ddp_instance_id = ex.ddp_instance_id)
            where
            realm.instance_name = inst.instance_name
            and request.kit_type_id = kType.kit_type_id
            and ex.ddp_participant_exit_id is null
            and not (kit.kit_complete <=> 1)
            and not (kit.error <=> 1)
            and kit.label_url_to is null
            and kit.label_date is null
            and kit.deactivated_date is null) as oldestKitRequestWithoutLabel,
        (select count(realm.instance_name) as kitRequestCount
            from
            ddp_kit_request request
            left join ddp_instance realm on request.ddp_instance_id = realm.ddp_instance_id
            left join ddp_kit kit on request.dsm_kit_request_id = kit.dsm_kit_request_id
            left join kit_type kt on request.kit_type_id = kt.kit_type_id
            left join ddp_participant_exit ex on (request.ddp_participant_id = ex.ddp_participant_id and
				request.ddp_instance_id = ex.ddp_instance_id)
            where
            realm.instance_name = inst.instance_name
            and request.kit_type_id = kType.kit_type_id
            and ex.ddp_participant_exit_id is null
            and not (kit.kit_complete <=> 1)
            and not (kit.error <=> 1)
            and not (kit.express <=> 1)
            and kit.label_url_to is not null
            and kit.deactivated_date is null) as kitRequestCountQueue,
        (select count(realm.instance_name) as kitRequestCount
            from
            ddp_kit_request request
            left join ddp_instance realm on request.ddp_instance_id = realm.ddp_instance_id
            left join ddp_kit kit on request.dsm_kit_request_id = kit.dsm_kit_request_id
            left join kit_type kt on request.kit_type_id = kt.kit_type_id
            left join ddp_participant_exit ex on (request.ddp_participant_id = ex.ddp_participant_id and
				request.ddp_instance_id = ex.ddp_instance_id)
            where
            realm.instance_name = inst.instance_name
            and request.kit_type_id = kType.kit_type_id
            and ex.ddp_participant_exit_id is null
            and not (kit.kit_complete <=> 1)
            and kit.error = 1
            and kit.deactivated_date is null) as kitRequestCountError,
        (select count(role.name)
            from ddp_instance realm,
            ddp_instance_role inRol,
            instance_role role
            where realm.ddp_instance_id = inRol.ddp_instance_id
            and inRol.instance_role_id = role.instance_role_id
            and role.name = ?
            and realm.ddp_instance_id = inst.ddp_instance_id) as 'has_role'
        from
        ddp_instance inst,
        ddp_kit_request_settings kSetting,
        kit_type kType
        where inst.ddp_instance_id = kSetting.ddp_instance_id
        and kType.kit_type_id = kSetting.kit_type_id
        and inst.is_active = 1
    """

    dashboardKitRequests:"""
        select
        (select count(request.ddp_kit_request_id) as kitNew
            from ddp_kit_request request
			left join ddp_kit kit on (request.dsm_kit_request_id = kit.dsm_kit_request_id)
			left join ddp_instance realm on (request.ddp_instance_id = realm.ddp_instance_id)
			left join ddp_participant_exit ex on (request.ddp_participant_id = ex.ddp_participant_id and
				request.ddp_instance_id = ex.ddp_instance_id)
    	    where realm.instance_name = ?
    	    and kit.deactivated_date is null
			and request.kit_type_id = ? and ex.ddp_participant_exit_id is null) as kitNew,
    	(select count(request.ddp_kit_request_id) as kitNewPeriod
            from ddp_kit_request request
			left join ddp_kit kit on (request.dsm_kit_request_id = kit.dsm_kit_request_id)
			left join ddp_instance realm on (request.ddp_instance_id = realm.ddp_instance_id)
			left join ddp_participant_exit ex on (request.ddp_participant_id = ex.ddp_participant_id and
				request.ddp_instance_id = ex.ddp_instance_id)
    	    where realm.instance_name = ?
    	    and kit.deactivated_date is null
			and request.kit_type_id = ? and ex.ddp_participant_exit_id is null
			and request.created_date >= ? and request.created_date <= ? ) as kitNewPeriod,
        (select count(request.ddp_kit_request_id) as kitSent
            from ddp_kit_request request
			left join ddp_kit kit on (request.dsm_kit_request_id = kit.dsm_kit_request_id)
			left join ddp_instance realm on (request.ddp_instance_id = realm.ddp_instance_id)
			left join ddp_participant_exit ex on (request.ddp_participant_id = ex.ddp_participant_id and
				request.ddp_instance_id = ex.ddp_instance_id)
    	    where kit.kit_complete = 1 and realm.instance_name = ?
    	    and kit.deactivated_date is null
			and request.kit_type_id = ? and ex.ddp_participant_exit_id is null) as kitSent,
    	(select count(request.ddp_kit_request_id) as kitSentPeriod
            from ddp_kit_request request
			left join ddp_kit kit on (request.dsm_kit_request_id = kit.dsm_kit_request_id)
			left join ddp_instance realm on (request.ddp_instance_id = realm.ddp_instance_id)
			left join ddp_participant_exit ex on (request.ddp_participant_id = ex.ddp_participant_id and
				request.ddp_instance_id = ex.ddp_instance_id)
    	    where kit.kit_complete = 1 and realm.instance_name = ?
    	    and kit.deactivated_date is null
			and request.kit_type_id = ? and ex.ddp_participant_exit_id is null
			and kit.scan_date >= ? and kit.scan_date <= ? ) as kitSentPeriod,
        (select count(request.ddp_kit_request_id) as kitReceived
            from ddp_kit_request request
			left join ddp_kit kit on (request.dsm_kit_request_id = kit.dsm_kit_request_id)
			left join ddp_instance realm on (request.ddp_instance_id = realm.ddp_instance_id)
			left join ddp_participant_exit ex on (request.ddp_participant_id = ex.ddp_participant_id and
				request.ddp_instance_id = ex.ddp_instance_id)
    	    where kit.receive_date is not null and realm.instance_name = ?
    	    and kit.deactivated_date is null
			and request.kit_type_id = ? and ex.ddp_participant_exit_id is null) as kitReceived,
        (select count(request.ddp_kit_request_id) as kitReceivedPeriod
            from ddp_kit_request request
			left join ddp_kit kit on (request.dsm_kit_request_id = kit.dsm_kit_request_id)
			left join ddp_instance realm on (request.ddp_instance_id = realm.ddp_instance_id)
			left join ddp_participant_exit ex on (request.ddp_participant_id = ex.ddp_participant_id and
				request.ddp_instance_id = ex.ddp_instance_id)
    	    where kit.receive_date is not null and realm.instance_name = ?
			and request.kit_type_id = ? and ex.ddp_participant_exit_id is null
    	    and kit.deactivated_date is null
			and kit.receive_date >= ? and kit.receive_date <= ? ) as kitReceivedPeriod
    """
    dashboardReportKitSent:"""
        select FROM_UNIXTIME(kit.scan_date/1000, '%m/01/%Y') as month, count(*) as kitSent
            from ddp_kit_request request
            left join ddp_kit kit on (request.dsm_kit_request_id = kit.dsm_kit_request_id)
            left join ddp_instance realm on (request.ddp_instance_id = realm.ddp_instance_id)
            left join ddp_participant_exit ex on (request.ddp_participant_id = ex.ddp_participant_id and
                request.ddp_instance_id = ex.ddp_instance_id)
            where kit.kit_complete = 1 and realm.instance_name = ?
            and kit.deactivated_date is null
            and request.kit_type_id = ? and ex.ddp_participant_exit_id is null
            group by FROM_UNIXTIME(kit.scan_date/1000, '%m/01/%Y')
    """

    dashboardReportKitReceived:"""
        select FROM_UNIXTIME(kit.receive_date/1000, '%m/01/%Y') as month, count(request.ddp_kit_request_id) as kitReceived
            from ddp_kit_request request
			left join ddp_kit kit on (request.dsm_kit_request_id = kit.dsm_kit_request_id)
			left join ddp_instance realm on (request.ddp_instance_id = realm.ddp_instance_id)
			left join ddp_participant_exit ex on (request.ddp_participant_id = ex.ddp_participant_id and
				request.ddp_instance_id = ex.ddp_instance_id)
    	    where kit.receive_date is not null and realm.instance_name = ?
    	    and kit.deactivated_date is null
			and request.kit_type_id = ? and ex.ddp_participant_exit_id is null
            group by FROM_UNIXTIME(kit.receive_date/1000, '%m/01/%Y')
    """

    dashboardKitDeactivated:"""
        select count(*) as kitRequestCount
        from(
            select
            ddp_site.instance_name,
            req.ddp_participant_id,
            req.dsm_kit_request_id,
            req.kit_type_id,
            ddp_site.ddp_instance_id
            from
            kit_type kt,
            ddp_kit_request req,
            ddp_instance ddp_site
            where
            req.ddp_instance_id = ddp_site.ddp_instance_id
            and
            req.kit_type_id = kt.kit_type_id) as request
            left join (
                select * from (SELECT
                kit.dsm_kit_request_id,
                kit.deactivated_date
                FROM ddp_kit kit
                INNER JOIN(
                    SELECT dsm_kit_request_id, MAX(dsm_kit_id) AS kit_id
                    FROM ddp_kit
                    GROUP BY dsm_kit_request_id) groupedKit
                ON kit.dsm_kit_request_id = groupedKit.dsm_kit_request_id
                AND kit.dsm_kit_id = groupedKit.kit_id)as wtf) as kit
            on kit.dsm_kit_request_id = request.dsm_kit_request_id
            left join ddp_participant_exit ex on (ex.ddp_instance_id = request.ddp_instance_id
                and ex.ddp_participant_id = request.ddp_participant_id)
            where
            kit.deactivated_date is not null
            and ex.ddp_participant_exit_id is null
            and request.instance_name = ?
            and request.kit_type_id = ?
    """

    kitNotReceived:"""
        select kit.kit_label
        from ddp_kit_request request
        left join ddp_kit kit on (kit.dsm_kit_request_id = request.dsm_kit_request_id)
        left join ddp_participant_exit ex on (ex.ddp_participant_id = request.ddp_participant_id
                and ex.ddp_instance_id = request.ddp_instance_id)
        where
		kit.kit_complete <=> 1
        and kit.receive_date is null
		and ex.ddp_participant_exit_id is null
    """

    getRoles:"""
        select role.name
        from ddp_instance realm,
        ddp_instance_role inRol,
        instance_role role
        where realm.ddp_instance_id = inRol.ddp_instance_id
        and inRol.instance_role_id = role.instance_role_id
        and role.name regexp '^%1'
        and realm.instance_name = ?
    """

    getDDPParticipantId:"""
        select part.ddp_participant_id
    	from
        ddp_participant part
        where part.participant_id = ?;
    """

    counterCollaboratorSample:"""
        select count(*) kitRequestCount
        from ddp_kit_request
        where bsp_collaborator_sample_id REGEXP "^%1" and kit_type_id = ?
    """

    updateKitRequestError:"""
        update ddp_kit kit
        INNER JOIN(
            SELECT dsm_kit_request_id, MAX(dsm_kit_id) AS kit_id
            FROM ddp_kit
            GROUP BY dsm_kit_request_id
        ) groupedKit
        ON kit.dsm_kit_request_id = groupedKit.dsm_kit_request_id
        and kit.dsm_kit_id = groupedKit.kit_id
        set
        error = ?,
        message = ?
        where
        kit.dsm_kit_request_id = ?
    """

    selectUploadedKits:"""
        select kit.dsm_kit_id,
        realm.ddp_instance_id,
        realm.instance_name,
        realm.base_url,
        realm.collaborator_id_prefix,
        realm.auth0_token,
        realm.migrated_ddp,
        request.ddp_participant_id,
        kit.easypost_address_id_to,
        type.kit_type_name
        from ddp_kit_request request,
        ddp_kit kit,
        ddp_instance realm,
        kit_type type,
        ddp_kit_request_settings carrier,
        kit_dimension dim
        where
        request.dsm_kit_request_id = kit.dsm_kit_request_id
        and request.kit_type_id = type.kit_type_id
        and request.ddp_instance_id = realm.ddp_instance_id
        and request.kit_type_id = carrier.kit_type_id
        and request.ddp_instance_id = carrier.ddp_instance_id
        and carrier.kit_dimension_id = dim.kit_dimension_id
        and kit.easypost_to_id is null
        and not (kit.error <=> 1)
        and kit.easypost_address_id_to is not null
        and realm.is_active = 1
        and kit.deactivated_date is null
    """

    reactivateKit:"""
        update
        ddp_kit
        set
        label_url_to = ?,
        label_url_return = ?,
        easypost_to_id = ?,
        easypost_return_id = ?,
        tracking_to_id = ?,
        tracking_return_id = ?,
        easypost_tracking_to_url = ?,
        easypost_tracking_return_url = ?,
        error = ?,
        message = ?
        where dsm_kit_request_id = ?
    """

    selectReceivedKitForNotification:"""
        select
        eve.event_name,
        eve.event_type,
        request.ddp_participant_id,
        request.dsm_kit_request_id,
        request.ddp_kit_request_id,
        request.upload_reason,
        realm.ddp_instance_id,
        realm.instance_name,
        realm.base_url,
        realm.auth0_token,
        realm.notification_recipients,
        realm.migrated_ddp,
        kit.receive_date,
        kit.scan_date
        from
        ddp_kit_request request,
        ddp_kit kit,
        event_type eve,
        ddp_instance realm
        where request.dsm_kit_request_id = kit.dsm_kit_request_id
        and request.ddp_instance_id = realm.ddp_instance_id
        and (eve.ddp_instance_id = request.ddp_instance_id
			and eve.kit_type_id = request.kit_type_id)
        and eve.event_type = "RECEIVED"
        and kit.kit_label = ?
    """

    selectSentKitForNotification:"""
        select
        eve.event_name,
        eve.event_type,
        request.ddp_participant_id,
        request.dsm_kit_request_id,
        request.ddp_kit_request_id,
        request.upload_reason,
        realm.ddp_instance_id,
        realm.instance_name,
        realm.base_url,
        realm.auth0_token,
        realm.notification_recipients,
        realm.migrated_ddp,
        kit.receive_date,
        kit.scan_date
        from
        ddp_kit_request request,
        ddp_kit kit,
        event_type eve,
        ddp_instance realm
        where request.dsm_kit_request_id = kit.dsm_kit_request_id
        and request.ddp_instance_id = realm.ddp_instance_id
        and (eve.ddp_instance_id = request.ddp_instance_id
			and eve.kit_type_id = request.kit_type_id)
        and eve.event_type = "SENT"
        and request.ddp_label = ?
    """

    labelSettingsQuery:"""
        select
        setting.label_setting_id,
        setting.name,
        setting.description,
        setting.default_page,
        setting.label_on_page,
        setting.label_height,
        setting.label_width,
        setting.top_margin,
        setting.right_margin,
        setting.bottom_margin,
        setting.left_margin
        from
        label_setting setting
        where
        not (setting.deleted <=> 1)
    """

    updateLabelSettings:"""
        update
        label_setting
        set
        name = ?,
        description = ?,
        default_page = ?,
        label_on_page = ?,
        label_height = ?,
        label_width = ?,
        top_margin = ?,
        right_margin = ?,
        bottom_margin = ?,
        left_margin = ?,
        deleted = ?
        where
        label_setting_id = ?
    """

    insertLabelSettings:"""
        insert into
        label_setting
        set
        name = ?,
        description = ?,
        default_page = ?,
        label_on_page = ?,
        label_height = ?,
        label_width = ?,
        top_margin = ?,
        right_margin = ?,
        bottom_margin = ?,
        left_margin = ?
    """

    insertParticipantEvent:"""
        insert into
        ddp_participant_event
        (ddp_instance_id,
        ddp_participant_id,
        date,
        done_by,
        event)
        values (?,?,?,?,?)
    """

    selectParticipantEvent:"""
        select event
        from
        ddp_participant_event ev
        where
        ev.ddp_instance_id = ?
        and ev.ddp_participant_id = ?
    """

    insertSurveyTrigger:"""
        insert into
        ddp_survey_trigger
        (note, created_date, created_by)
        values
        (?,?,?)
    """
}
