{
  "i18n": {
    "en": {
      include required("i18n/en.conf")
    },
    "es": {
      include required("i18n/es.conf")
    }
  },

  "id": {
    "study": "RGP",
    "act": {
      "prequal": "PREQUAL",
      "enrollment": "ENROLLMENT",
      "mother": "MOTHER",
      "father": "FATHER",
      "sibling": "SIBLING",
      "child": "CHILD",
      "relative": "RELATIVE",
    },
    "q": {
      "general_info": "GENERAL_INFO",
      "filler_title": "FILLER_TITLE",
      "filler_first_name": "FILLER_FIRST_NAME",
      "filler_phone": "FILLER_PHONE",
      "relationship": "RELATIONSHIP",
      "state": "STATE",
      "website": "WEBSITE",
      "description": "DESCRIPTION",
      "clinical_diagnoses": "CLINICAL_DIAGNOSES",
      "clinical_diagnoses_details": "CLINICAL_DIAGNOSES_DETAILS",
      "genetic_diagnoses": "GENETIC_DIAGNOSES",
      "genetic_diagnoses_details": "GENETIC_DIAGNOSES_DETAILS",
      "find_out": "FIND_OUT",
      "patient_age": "PATIENT_AGE",
      "condition_age": "CONDITION_AGE",
      "patient_deceased": "PATIENT_DECEASED",
      "deceased_age": "DECEASED_AGE",
      "deceased_cause": "DECEASED_CAUSE",
      "deceased_dna": "DECEASED_DNA",
      "patient_sex": "PATIENT_SEX",
      "race": "RACE",
      "ethnicity": "ETHNICITY",
      "doctor_types": "DOCTOR_TYPES",
      "tests": "TESTS",
      "tests_microarray_year": "TESTS_MICROARRAY_YEAR",
      "tests_microarray_lab": "TESTS_MICROARRAY_LAB",
      "tests_microarray_family": "TESTS_MICROARRAY_FAMILY",
      "tests_wexome_year": "TESTS_WEXOME_YEAR",
      "tests_wexome_lab": "TESTS_WEXOME_LAB",
      "tests_wexome_family": "TESTS_WEXOME_FAMILY",
      "tests_wgenome_year": "TESTS_WGENOME_YEAR",
      "tests_wgenome_lab": "TESTS_WGENOME_LAB",
      "tests_wgenome_family": "TESTS_WGENOME_FAMILY",
      "biopsy": "BIOPSY",
      "other_studies": "OTHER_STUDIES",
      "expect_results": "EXPECT_RESULTS",
      "other_studies_describe": "OTHER_STUDIES_DESCRIBE",
      "mother_race": "MOTHER_RACE",
      "mother_ethnicity": "MOTHER_ETHNICITY",
      "mother_same_condition": "MOTHER_SAME_CONDITION",
      "mother_condition_age": "MOTHER_CONDITION_AGE",
      "mother_can_participate": "MOTHER_CAN_PARTICIPATE",
      "mother_deceased": "MOTHER_DECEASED",
      "mother_deceased_dna": "MOTHER_DECEASED_DNA",
      "father_race": "FATHER_RACE",
      "father_ethnicity": "FATHER_ETHNICITY",
      "father_same_condition": "FATHER_SAME_CONDITION",
      "father_condition_age": "FATHER_CONDITION_AGE",
      "father_can_participate": "FATHER_CAN_PARTICIPATE",
      "father_deceased": "FATHER_DECEASED",
      "father_deceased_dna": "FATHER_DECEASED_DNA",
      "no_siblings": "NO_SIBLINGS",
      "sibling_sex": "SIBLING_SEX",
      "sibling_age": "SIBLING_AGE",
      "sibling_race": "SIBLING_RACE",
      "sibling_ethnicity": "SIBLING_ETHNICITY",
      "sibling_same_condition": "SIBLING_SAME_CONDITION",
      "sibling_condition_age": "SIBLING_CONDITION_AGE",
      "sibling_can_participate": "SIBLING_CAN_PARTICIPATE",
      "no_children": "NO_CHILDREN",
      "child_sex": "CHILD_SEX",
      "child_age": "CHILD_AGE",
      "child_race": "CHILD_RACE",
      "child_ethnicity": "CHILD_ETHNICITY",
      "child_same_condition": "CHILD_SAME_CONDITION",
      "child_condition_age": "CHILD_CONDITION_AGE",
      "child_can_participate": "CHILD_CAN_PARTICIPATE",
      "no_relative_affected": "NO_RELATIVE_AFFECTED",
      "relative_sex": "RELATIVE_SEX",
      "relative_age": "RELATIVE_AGE",
      "relative_race": "RELATIVE_RACE",
      "relative_ethnicity": "RELATIVE_ETHNICITY",
      "relative_condition_age": "RELATIVE_CONDITION_AGE",
      "relative_can_participate": "RELATIVE_CAN_PARTICIPATE",
      "family_info": "FAMILY_INFO",
      "agreement": "AGREEMENT",

      // Questions no longer used
      "ethnicity_categories": "ETHNICITY_CATEGORIES",
      "sick_family": "SICK_FAMILY",
    }
  },

  // Pull in questions here to workaround HOCON parser limitations for resolving `include`s.
  // We use underscore `_questions` to indicate that we're doing something delicate here.
  "_questions": {
    include required("enrollment-questions.conf")
  }
}
