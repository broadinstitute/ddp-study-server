group StudyGovernanceDao;

select_all_policies() ::= <<
select policy.study_governance_policy_id,
       study.umbrella_study_id as study_id,
       study.guid              as study_guid,
       scgu.expression_id   as scgu_expression_id,
       scgu.expression_guid as scgu_expression_guid,
       scgu.expression_text as scgu_expression_text,
       aom.age_of_majority_rule_id    as aom_age_of_majority_rule_id,
       aom.study_governance_policy_id as aom_study_governance_policy_id,
       aom.condition_expression       as aom_condition_expression,
       aom.age                        as aom_age,
       aom.preparation_months         as aom_preparation_months,
       aom.execution_order            as aom_execution_order
  from study_governance_policy as policy
  join umbrella_study as study on study.umbrella_study_id = policy.study_id
  join expression as scgu on scgu.expression_id = policy.should_create_governed_user_expression_id
  left join age_of_majority_rule as aom on aom.study_governance_policy_id = policy.study_governance_policy_id
>>

queryAllPolicies() ::= <<
<select_all_policies()>
order by policy.study_governance_policy_id asc, aom.execution_order asc
>>

queryPolicyById() ::= <<
<select_all_policies()>
where policy.study_governance_policy_id = :id
order by aom.execution_order asc
>>

queryPolicyByStudyId() ::= <<
<select_all_policies()>
where study.umbrella_study_id = :studyId
order by aom.execution_order asc
>>

queryPolicyByStudyGuid() ::= <<
<select_all_policies()>
where study.guid = :studyGuid
order by aom.execution_order asc
>>

select_all_age_up_candidates() ::= <<
select auc.age_up_candidate_id,
       study.umbrella_study_id as study_id,
       study.guid              as study_guid,
       participant.user_id as participant_user_id,
       participant.guid    as participant_user_guid,
       operator.user_id as operator_user_id,
       operator.guid    as operator_user_guid,
       profile.birth_date,
       auc.initiated_preparation,
       (select et.enrollment_status_type_code
          from user_study_enrollment as en
          join enrollment_status_type as et on et.enrollment_status_type_id = en.enrollment_status_type_id
         where en.study_id = study.umbrella_study_id
           and en.user_id = participant.user_id
           and valid_to is null
         order by valid_from desc
         limit 1
       ) as enrollment_status
  from age_up_candidate as auc
  join umbrella_study as study on study.umbrella_study_id = auc.study_id
  join user as participant on participant.user_id = auc.participant_user_id
  join user as operator on operator.user_id = auc.operator_user_id
  left join user_profile as profile on profile.user_id = participant.user_id
>>

queryAllAgeUpCandidatesByStudyId() ::= <<
<select_all_age_up_candidates()>
where study.umbrella_study_id = :studyId
>>

queryAgeUpCandidateByStudyIdAndUserId() ::= <<
<select_all_age_up_candidates()>
where study.umbrella_study_id = :studyId
and participant.user_id = :userId
>>
