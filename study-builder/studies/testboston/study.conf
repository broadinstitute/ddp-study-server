{
  "tenant": {
    "domain": ${auth0.domain},
    "mgmtClientId": ${auth0.mgmtClientId},
    "mgmtSecret": ${auth0.mgmtClientSecret}
  },

  "umbrella": {
    "name": "Test Boston",
    "guid": ${id.study}
  },

  "study": {
    "name": "Test Boston",
    "guid": ${id.study},
    "studyEmail": ${contact.email},
    "baseWebUrl": ${baseWebUrl},
    "irbPassword": ${irbPassword},
    "plusCodePrecision": null,
    "shareParticipantLocation": false,
  },

  # TODO: support adding multiple cliens, e.g. the CRC client
  "client": {
    "name": "testboston-app-client",
    "id": ${auth0.appClientId},
    "secret": ${auth0.appClientSecret},
    "passwordRedirectUrl": ${passwordRedirectUrl}
  },

  "adminUser": {
    "guid": "TESTBOSTONADMINUSR"
  },

  # TODO: figure this out
  "governance": null,

  "studyDetails": [
    {
      "language": "en",
      "name": "Test Boston",
      "summary": "The Test Boston Study"
    }
  ],

  "supportedLanguages": ["en"],

  "sendgrid": {
    "apiKey": ${sendgridApiKey},
    "fromName": ${sendgridFromName},
    "fromEmail": ${sendgridFromEmail},
    "defaultSalutation": ${sendgridDefaultSalutation}
  },

  include required("sendgrid_emails.conf"),

  # TODO: figure this out
  "kits": [],

  "activities": [
    {
      "filepath": "prequal.conf",
      "mappings": [],
      "validations": [
        {
          "messageTemplate": {
            "templateType": "HTML",
            "templateText": "$tb_prequal_age_check",
            "variables": [
              {
                "name": "tb_prequal_age_check",
                "translations": [
                  {
                    "language": "en",
                    "text": ${i18n.en.prequal.age_check_val_msg}
                  }
                ]
              }
            ]
          },
          "stableIds": [ ${id.q.age_check} ],
          "precondition":
            "user.studies[\""${id.study}"\"].forms[\""${id.act.prequal}"\"].questions[\""${id.q.age_check}"\"].isAnswered()",
          "expression":
            "user.studies[\""${id.study}"\"].forms[\""${id.act.prequal}"\"].questions[\""${id.q.age_check}"\"].answers.hasFalse()"
        }
      ]
    },

    {
      "filepath": "prescreen_auth.conf",
      "mappings": [],
      "validations": []
    },

    {
      "filepath": "prescreen_survey.conf",
      "mappings": [],
      "validations": []
    }

    {
      "filepath": "consent.conf",
      "mappings": [],
      "validations": []
    },

    {
      "filepath": "assisted_consent.conf",
      "mappings": [],
      "validations": []
    },

    {
      "filepath": "covid_survey.conf",
      "mappings": [],
      "validations": []
    },

    # TODO: longitudinal activities
  ],

  "activityTimestamp": null,

  # TODO: get real icon files
  "activityStatusIcons": [
    {
      "filepath": "icons/created.svg",
      "statusType": "CREATED"
    },
    {
      "filepath": "icons/in_progress.svg",
      "statusType": "IN_PROGRESS"
    },
    {
      "filepath": "icons/complete.svg",
      "statusType": "COMPLETE"
    }
  ],

  # TODO: this needs work
  "pdfs": [],

  "workflowTransitions": [
    # start consent flow if they have an invite, otherwise start prescreen flow
    {
      "from": {
        "type": "START"
      },
      "to": [
        {
          "type": "ACTIVITY",
          "activityCode": ${id.act.consent},
          "expression": "user.studies[\""${id.study}"\"].hasInvitation(\"RECRUITMENT\")"
        },
        {
          "type": "ACTIVITY",
          "activityCode": ${id.act.prequal},
          "expression": "true"
        }
      ]
    },

    # invited patient workflow
    {
      "from": {
        "type": "ACTIVITY",
        "activityCode": ${id.act.consent}
      },
      "to": [
        {
          "type": "ACTIVITY",
          "activityCode": ${id.act.covid_survey},
          "expression": "true"
        }
      ]
    },
    {
      "from": {
        "type": "ACTIVITY",
        "activityCode": ${id.act.covid_survey}
      },
      "to": [
        {
          "type": "DASHBOARD",
          "expression": "true"
        }
      ]
    },

    # prescreen workflow
    {
      "from": {
        "type": "ACTIVITY",
        "activityCode": ${id.act.prequal}
      },
      "to": [
        {
          "type": "ACTIVITY",
          "activityCode": ${id.act.prescreen_auth},
          "expression": "true"
        }
      ]
    },
    {
      "from": {
        "type": "ACTIVITY",
        "activityCode": ${id.act.prescreen_auth}
      },
      "to": [
        {
          "type": "ACTIVITY",
          "activityCode": ${id.act.prescreen_survey},
          "expression": "true"
        }
      ]
    },
    {
      "from": {
        "type": "ACTIVITY",
        "activityCode": ${id.act.prescreen_survey}
      },
      "to": [
        {
          "type": "ACTIVITY",
          "activityCode": ${id.act.covid_survey},
          "expression": "true"
        }
      ]
    },
    {
      "from": {
        "type": "ACTIVITY",
        "activityCode": ${id.act.covid_survey}
      },
      "to": [
        {
          "type": "DASHBOARD",
          "expression": "true"
        }
      ]
    },

    # return user workflow
    {
      "from": {
        "type": "RETURN_USER"
      },
      "to": [
        {
          "type": "ACTIVITY",
          "activityCode": ${id.act.covid_survey},
          "expression": "user.studies[\""${id.study}"\"].forms[\""${id.act.covid_survey}"\"].isStatus(\"CREATED\", \"IN_PROGRESS\")"
        },
        {
          "type": "ACTIVITY",
          "activityCode": ${id.act.consent},
          "expression": "user.studies[\""${id.study}"\"].forms[\""${id.act.consent}"\"].isStatus(\"CREATED\", \"IN_PROGRESS\")"
        },
        {
          "type": "ACTIVITY",
          "activityCode": ${id.act.prescreen_survey},
          "expression": "user.studies[\""${id.study}"\"].forms[\""${id.act.prescreen_survey}"\"].isStatus(\"CREATED\", \"IN_PROGRESS\")"
        },
        {
          "type": "ACTIVITY",
          "activityCode": ${id.act.prescreen_auth},
          "expression": "user.studies[\""${id.study}"\"].forms[\""${id.act.prescreen_auth}"\"].isStatus(\"CREATED\", \"IN_PROGRESS\")"
        },
        {
          "type": "DASHBOARD",
          "expression": "true"
        }
      ]
    }
  ],

  # TODO: more to come
  "events": [

    # enrollment events
    {
      "trigger": {
        "type": "ACTIVITY_STATUS",
        "activityCode": ${id.act.consent},
        "statusType": "COMPLETE"
      },
      "action": {
        "type": "USER_ENROLLED"
      },
      "maxOccurrencesPerUser": 1,
      "dispatchToHousekeeping": false,
      "order": 1
    },

  ]
}
