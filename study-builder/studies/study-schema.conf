{
    "tenant": {
        "domain": "string",
        "mgmtClientId": "string",
        "mgmtSecret": "string"
    },
    "umbrella": {
        "name": "string",
        "guid": "string"
    },
    "study": {
        "name": "string",
        "guid": "string",
        "studyEmail": "null | string",
        "baseWebUrl": "string",
        "irbPassword": "null | string",
        "plusCodePrecision": "null | LEAST | LESS | MEDIUM | MORE | MOST",
        "shareParticipantLocation": "bool",
    },

    "client": {
        "name": "string",
        "id": "string",
        "secret": "string",
        "passwordRedirectUrl": "string"
    },

    "adminUser": {
        "guid": "string"
    },

    # The study governance policy.
    # Optional, can be left out or set to null.
    "governance": {
        # PEX expression to specify if a new governed user should be created when the operator registers.
        # When this evaluates to true, a new participant user will be created and data will be associated with this new user.
        # When false, no new user will be created and no change will be made to operator.
        "shouldCreateGovernedUserExpr": "string",

        # Rules for age-up process, used for calculating date-of-majority
        # and determining if participant has reached moment of age-of-majority or not.
        # Only the first rule that applies to participant will be used.
        # Order of the listed rules will be the order they are executed in.
        "ageOfMajorityRules": [
            {
                # PEX expression to determine if this rule applies to participant.
                "condition": "string",
                # The age particpant needs to be to be considered age-of-majority.
                "age": "integer",
                # Optional, the number of months before participant's date-of-majority when we should start preparation process.
                "prepMonths": "integer"
            }
        ]
    },

    "studyDetails": [
        {
            "language": "string",
            "name": "string",
            "summary": "null | string"
        }
    ],

    "sendgrid": {
        "apiKey": "string",
        "fromName": "string",
        "fromEmail": "string",
        "defaultSalutation": "string"
    },

    "kits": [
        {
            "type": "SALIVA | BLOOD",
            "quantity": "integer",
            "rules": [
                {
                    "type": "PEX",
                    "expression": "string"
                },
                {
                    "type": "COUNTRY",
                    "country": "string"
                }
            ]
        }
    ],

    "activities": [
        {
            # Note: due to limitations of typesafe-config library, we can't use `include` feature
            # when we're inside an array and the included file has substitutions.
            "filepath": "relative/path/to/about-you.conf",
            "mappings": [
                {
                    "type": "DATE_OF_DIAGNOSIS",
                    "stableId": "string"
                }
            ],
            # List of complex validations for the activity. Optional.
            "validations": [
                {
                    "messageTemplate": {
                        # Template object
                    },
                    "stableIds": [ "strings" ], # List of question stable ids that this validation depends on.
                    "precondition": "pex",      # If evaluates to true, this validation will be processed. Otherwise this validation is skipped.
                    "expression": "pex"         # If evaluates to true, this validation will be displayed as error to user.
                }
            ]
        },
        {
            # Note: the path is relative to directory of the current file.
            "filepath": "relative/path/to/consent.conf",
            "mappings": [
                {
                    "type": "BLOOD | TISSUE | DATE_OF_BIRTH",
                    "stableId": "string"
                }
            ]
        },
        {
            "filepath": "relative/path/to/release.conf",
            "mappings": [
                {
                    "type": "MEDICAL_RELEASE",
                    "stableId": null
                }
            ]
        },
        {
            "filepath": "relative/path/to/loved-one.conf",
            "mappings": []
        },
        {
            "filepath": "relative/path/to/followup-consent.conf",
            "mappings": []
        }
    ],

    "activityTimestamp": "null | date-string",

    "activityStatusIcons": [
        {
            # Note: the path is relative to directory of the current file.
            "filepath": "string",
            "statusType": "CREATED | IN_PROGRESS | COMPLETE"
        }
    ],

    "pdfs": [
        {
            "name": "string",
            "filename": "string",
            "mapping": {
                "type": "CONSENT | RELEASE"
            },

            "versions": [
                {
                    "tag": "string",
                    "start": "date-string",     # Optional, will default to current timestamp.
                    "end": "date-string",       # Optional, will default to null.

                    "sources": [
                        {
                            "type": "EMAIL | PARTICIPANT"
                        },
                        {
                            "type": "ACTIVITY",
                            "activityCode": "string",
                            "versionTag": "string"
                        }
                    ],

                    # Note: ordering is important and determines order in final rendered pdf.
                    "files": [
                        {
                            # Note: the path is relative to directory of the current file.
                            "filepath": "string",
                            "type": "CUSTOM",
                            "substitutions": [
                                {
                                    "type": "PROFILE",
                                    "field": "string",
                                    "profileField": "string"
                                },
                                {
                                    "type": "ACTIVITY_DATE",
                                    "field": "string",
                                    "activityCode": "string"
                                },
                                {
                                    "type": "TEXT | DATE",
                                    "field": "string",
                                    "activityCode": "string",
                                    "questionStableId": "string"
                                },
                                {
                                    "type": "BOOLEAN",
                                    "field": "string",
                                    "activityCode": "string",
                                    "questionStableId": "string",
                                    "checkIfFalse": "bool"
                                }
                            ]
                        },
                        {
                            "filepath": "string",
                            "type": "MAILING_ADDRESS",
                            "fields": {
                                "firstName": "string",
                                "lastName": "string",
                                "street": "string",
                                "city": "string",
                                "state": "string",
                                "zip": "string",
                                "country": "string",    # Optional
                                "phone": "string"
                            }
                        },
                        {
                            "filepath": "string",
                            "type": "PHYSICIAN",
                            "fields": {
                                "name": "string",
                                "institution": "string",
                                "city": "string",
                                "state": "string",
                                "street": "string",     # Optional
                                "zip": "string",        # Optional
                                "phone": "string"       # Optional
                            }
                        },
                        {
                            "filepath": "string",
                            "type": "INITIAL_BIOPSY | INSTITUTION",
                            "fields": {
                                "institution": "string",
                                "city": "string",
                                "state": "string"
                            }
                        }
                    ]
                }
            ]
        }
    ],

    "workflowTransitions": [
        {
            "from": {
                "type": "START | RETURN_USER"
            },

            # Note: ordering of `to` is important and determines order in which the next state is considered.
            "to": [
                {
                    "type": "DONE | DASHBOARD | THANK_YOU | MAILING_LIST | INTERNATIONAL_PATIENTS",
                    "expression": "string"
                },
                {
                    "type": "ACTIVITY",
                    "activityCode": "string",
                    "expression": "string"
                }
            ]
        },
        {
            "from": {
                "type": "ACTIVITY",
                "activityCode": "string"
            },
            "to": [
                {
                    "type": "ACTIVITY",
                    "activityCode": "string",
                    "expression": "string"
                }
            ]
        }
    ],

    "events": [
        # join mailing list event
        {
            "trigger": {
                "type": "JOIN_MAILING_LIST"
            },
            "action": {
                "type": "SENDGRID_EMAIL",
                "emailTemplate": "string",
                "language": "string",
                "pdfAttachments": []
            },
            "preconditionExpr": "null | string",
            "cancelExpr": "null | string",
            "maxOccurrencesPerUser": "null | integer",
            "delaySeconds": "null | integer",
            "dispatchToHousekeeping": "bool",
            "order": "integer"
        },

        # resent email events
        {
            "trigger": {
                "type": "WORKFLOW_STATE",
                "activityCode": "string"
            },
            "action": {
                "type": "SENDGRID_EMAIL",
                "emailTemplate": "string",
                "language": "string",
                "pdfAttachments": []
            },
            "preconditionExpr": "null | string",
            "cancelExpr": "null | string",
            "maxOccurrencesPerUser": "null | integer",
            "delaySeconds": "null | integer",
            "dispatchToHousekeeping": "bool",
            "order": "integer"
        },
        {
            "trigger": {
                "type": "USER_NOT_IN_STUDY"
            },
            "action": {
                "type": "SENDGRID_EMAIL",
                "emailTemplate": "string",
                "language": "string",
                "pdfAttachments": []
            },
            "preconditionExpr": "null | string",
            "cancelExpr": "null | string",
            "maxOccurrencesPerUser": "null | integer",
            "delaySeconds": "null | integer",
            "dispatchToHousekeeping": "bool",
            "order": "integer"
        },

        # activity instance creation events
        {
            "trigger": {
                "type": "ACTIVITY_STATUS",
                "activityCode": "string",
                "statusType": "CREATED | IN_PROGRESS | COMPLETE"
            },
            "action": {
                "type": "ACTIVITY_INSTANCE_CREATION",
                "activityCode": "string"
            },
            "preconditionExpr": "null | string",
            "cancelExpr": "null | string",
            "maxOccurrencesPerUser": "null | integer",
            "delaySeconds": "null | integer",
            "dispatchToHousekeeping": "bool",
            "order": "integer"
        },

        # activity status email events, reminder email events, on-demand activity email events
        {
            "trigger": {
                "type": "ACTIVITY_STATUS",
                "activityCode": "string",
                "statusType": "CREATED | IN_PROGRESS | COMPLETE"
            },
            "action": {
                "type": "SENDGRID_EMAIL",
                "emailTemplate": "string",
                "language": "string",
                "pdfAttachments": []
            },
            "preconditionExpr": "null | string",
            "cancelExpr": "null | string",
            "maxOccurrencesPerUser": "null | integer",
            "delaySeconds": "null | integer",
            "dispatchToHousekeeping": "bool",
            "order": "integer"
        },

        # email with pdf attachment event
        {
            "trigger": {
                "type": "ACTIVITY_STATUS",
                "activityCode": "string",
                "statusType": "CREATED | IN_PROGRESS | COMPLETE"
            },
            "action": {
                "type": "SENDGRID_EMAIL",
                "emailTemplate": "string",
                "language": "string",
                "pdfAttachments": [
                    { "pdfName": "string", "generateIfMissing": "bool" }
                ]
            },
            "preconditionExpr": "null | string",
            "cancelExpr": "null | string",
            "maxOccurrencesPerUser": "null | integer",
            "delaySeconds": "null | integer",
            "dispatchToHousekeeping": "bool",
            "order": "integer"
        },

        # pdf generation event
        {
            "trigger": {
                "type": "ACTIVITY_STATUS",
                "activityCode": "string",
                "statusType": "COMPLETE"
            },
            "action": {
                "type": "PDF_GENERATION",
                "pdfName": "string"
            },
            "preconditionExpr": "null | string",
            "cancelExpr": "null | string",
            "maxOccurrencesPerUser": "null | integer",
            "delaySeconds": "null | integer",
            "dispatchToHousekeeping": "bool",
            "order": "integer"
        },

        # medical update event
        {
            "trigger": {
                "type": "MEDICAL_UPDATE"
            },
            "action": {
                "type": "PDF_GENERATION",
                "pdfName": "string"
            },
            "preconditionExpr": "null | string",
            "cancelExpr": "null | string",
            "maxOccurrencesPerUser": "null | integer",
            "delaySeconds": "null | integer",
            "dispatchToHousekeeping": "bool",
            "order": "integer"
        },

        # registered event
        {
            "trigger": {
                "type": "USER_REGISTERED"
            },
            "action": {
                "type": "SENDGRID_EMAIL",
                "emailTemplate": "string",
                "language": "string",
                "linkedActivityCode": "null | string",
                "pdfAttachments": []
            },
            "preconditionExpr": "null | string",
            "cancelExpr": "null | string",
            "maxOccurrencesPerUser": "null | integer",
            "delaySeconds": "null | integer",
            "dispatchToHousekeeping": "bool",
            "order": "integer"
        },

        # enrollment event
        {
            "trigger": {
                "type": "ACTIVITY_STATUS",
                "activityCode": "string",
                "statusType": "CREATED | IN_PROGRESS | COMPLETE"
            },
            "action": {
                "type": "USER_ENROLLED"
            },
            "preconditionExpr": "null | string",
            "cancelExpr": "null | string",
            "maxOccurrencesPerUser": "null | integer",
            "delaySeconds": "null | integer",
            "dispatchToHousekeeping": "bool",
            "order": "integer"
        },

        # announcement event
        {
            "trigger": {
                "type": "ACTIVITY_STATUS",
                "activityCode": "string",
                "statusType": "CREATED | IN_PROGRESS | COMPLETE"
            },
            "action": {
                "type": "ANNOUNCEMENT",
                "permanent": "bool",        # Should it be a persistent message? Optional, defaults to false.
                "createForProxies": "bool", # Create for all active proxies instead of the participant? Optional, defaults to false.
                "msgTemplate": {
                    "type": "TEXT | HTML",
                    "text": "string",
                    "variables": [
                        {
                            "name": "string",
                            "translations": [
                                {
                                    "language": "string",
                                    "text": "string"
                                }
                            ]
                        }
                    ]
                }
            },
            "preconditionExpr": "null | string",
            "cancelExpr": "null | string",
            "maxOccurrencesPerUser": "null | integer",
            "delaySeconds": "null | integer",
            "dispatchToHousekeeping": "bool",
            "order": "integer"
        },

        # populate profile events
        {
            "trigger": {
                "type": "ACTIVITY_STATUS",
                "activityCode": "string",
                "statusType": "CREATED | IN_PROGRESS | COMPLETE"
            },
            "action": {
                "type": "COPY_ANSWER",
                "copySourceQuestionStableId": "string",
                "copyTarget": "PARTICIPANT_PROFILE_FIRST_NAME | PARTICIPANT_PROFILE_LAST_NAME",
            },
            "preconditionExpr": "null | string",
            "cancelExpr": "null | string",
            "maxOccurrencesPerUser": "null | integer",
            "delaySeconds": "null | integer",
            "dispatchToHousekeeping": "bool",
            "order": "integer"
        },

        # dsm notification email events
        {
            "trigger": {
                "type": "DSM_NOTIFICATION",
                "dsmEvent": "SALIVA_RECEIVED | BLOOD_RECEIVED | BLOOD_SENT | BLOOD_SENT_4WK"
            },
            "action": {
                "type": "SENDGRID_EMAIL",
                "emailTemplate": "string",
                "language": "string",
                "pdfAttachments": []
            },
            "preconditionExpr": "null | string",
            "cancelExpr": "null | string",
            "maxOccurrencesPerUser": "null | integer",
            "delaySeconds": "null | integer",
            "dispatchToHousekeeping": "bool",
            "order": "integer"
        },

        # exit request event
        {
            "trigger": {
                "type": "EXIT_REQUEST"
            },
            "action": {
                "type": "STUDY_EMAIL",
                "emailTemplate": "string",
                "language": "string",
                "pdfAttachments": []
            },
            "preconditionExpr": "null | string",
            "cancelExpr": "null | string",
            "maxOccurrencesPerUser": "null | integer",
            "delaySeconds": "null | integer",
            "dispatchToHousekeeping": "bool",
            "order": "integer"
        },

        # event action to send invitation email, which will provide the invitation guid as substitution
        {
            "action": {
                "type": "INVITATION_EMAIL",
                "emailTemplate": "string",
                "language": "string",
                "pdfAttachments": []
            },
            # trigger, precondition, etc ...
        },

        # event action to create new invitation
        {
            "action": {
                "type": "CREATE_INVITATION",
                "markExistingAsVoided": "bool",
                "contactEmailQuestionStableId": "string"
            },
            # trigger, precondition, etc ...
        },

        # event action to hide activity instances
        {
            "action": {
                "type": "HIDE_ACTIVITIES",
                "activityCodes": [ "strings" ]
            },
            # trigger, precondition, etc ...
        },

        # event action to mark activity instances as read-only
        {
            "action": {
                "type": "MARK_ACTIVITIES_READ_ONLY",
                "activityCodes": [ "strings" ]
            },
            # trigger, precondition, etc ...
        },
    ]
}
